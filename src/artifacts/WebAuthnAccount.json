{
  "name": "WebAuthnAccount",
  "functions": [
    {
      "name": "compute_note_hash_and_nullifier",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "contract_address",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "nonce",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "storage_slot",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "preimage",
          "type": {
            "kind": "array",
            "length": 5,
            "type": {
              "kind": "field"
            }
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "array",
          "length": 4,
          "type": {
            "kind": "field"
          }
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "constructor",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "signing_pub_key_x",
          "type": {
            "kind": "array",
            "length": 32,
            "type": {
              "kind": "integer",
              "sign": "unsigned",
              "width": 8
            }
          },
          "visibility": "public"
        },
        {
          "name": "signing_pub_key_y",
          "type": {
            "kind": "array",
            "length": 32,
            "type": {
              "kind": "integer",
              "sign": "unsigned",
              "width": 8
            }
          },
          "visibility": "public"
        }
      ],
      "returnTypes": [],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "deserialize_and_validate_webauthn_witness",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "challenge_field",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "public_key_x",
          "type": {
            "kind": "array",
            "length": 32,
            "type": {
              "kind": "integer",
              "sign": "unsigned",
              "width": 8
            }
          },
          "visibility": "private"
        },
        {
          "name": "public_key_y",
          "type": {
            "kind": "array",
            "length": 32,
            "type": {
              "kind": "integer",
              "sign": "unsigned",
              "width": 8
            }
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "entrypoint",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "payload",
          "type": {
            "kind": "struct",
            "path": "authwit::entrypoint::EntrypointPayload",
            "fields": [
              {
                "name": "function_calls",
                "type": {
                  "kind": "array",
                  "length": 4,
                  "type": {
                    "kind": "struct",
                    "path": "authwit::entrypoint::FunctionCall",
                    "fields": [
                      {
                        "name": "args_hash",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "function_selector",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "target_address",
                        "type": {
                          "kind": "field"
                        }
                      },
                      {
                        "name": "is_public",
                        "type": {
                          "kind": "boolean"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "nonce",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "public"
        }
      ],
      "returnTypes": [],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "is_valid",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "message_hash",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "is_valid_public",
      "functionType": "open",
      "isInternal": false,
      "parameters": [
        {
          "name": "message_hash",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_data",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::HistoricBlockData",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "blocks_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "set_is_valid_storage",
      "functionType": "open",
      "isInternal": true,
      "parameters": [
        {
          "name": "message_hash",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "value",
          "type": {
            "kind": "boolean"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_data",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::HistoricBlockData",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "blocks_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    }
  ],
  "events": [],
  "debug": {
    "debugSymbols": [
      "",
      "eJztnM1q4zAUhd/F6xAkXV395FWGWYRpBwolHSbZhbx73WLJ9zbCIRPGJPVZpYEj9firJH+LomP3+vZre3h52+27zbELsdv8OHb7P9vdx9f9Yfv30G3MqnvePfWfp1X3++X1udvY0+osZYk4D8n+52RrmkIr7p3xJe5duBDPxEM4J6pRb04/V11ID9k6z9i6z9TWlNO/t47mIVvbVmubbCluU3TT3b2JtUsan9Pbz/lda35nmIYxzpKdnj+zK1ljx/k/ap2FU8WYQxijV1Ohh2ztb23tTA4l67yfbh2THbLJxbFKq3W/LoYom7E1UyNKZEoFIso1nFt9J2kwaAgaATQEjebbfLE0mpawWBpN+1gqjdS0msXSaNrSYmnc7HbfisbNzvitaMBFJQ24qKQBF5U04KKSBlxU0oCLChoZLippwEUlDbiopAEXlTTgopIGXFTSgItKGnBRSQMuKmnARQUNayCjCgdsVOGAjioc8FGFA0KqcMBIFQ4oqcIBJ1U4IKUKB6xU4rCwUoUDVqpwwEoVDlipwgErVThgpQoHrFThgJUqHLBShQNWKnE4WKnCAStVOGClCgesVOGAlSocsFKFA1aqcMBKFQ5YqcIBK5U4CFaqcMBKFQ5YqcIBK1U4YKUKx91aKdeLLDiYaRwulHssSFzY4PPVMOZ10kwFRhYXgfQwPrvMK4RjF2vE6itl5tUx2+/S0sZGml4nFF35k1JkP70XHHFZVY5imA77ei2O5zEahrUyr5LdCRKu+zcQSySNxrlOG8cTiuK1m9LPK3t3Ajr4UjlE/rr2/LzC9z+RpFqDmS+Ec1l7dH5ZkV03j6hcH9MacUFPiMN53x7lQxnFfvxNgYezcN1+TaTxlXx+WqR1+zy/MKh97l4Y1D6ZpgZ5u27//wmb3NrvPb7T6R3fdquY",
      "",
      "",
      "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KteF1LgupMZ1ITWuC6lxXUjthT1NG9eF1LgupMZ1ITWuC6lxXUiN60JqXBdS47qQGteF1LgupMZ1ITWuC6lxXUiN60JqXBdS47qQGteF1LgupMZ1ITWuC6lxXUiN60JqXBdS47qQGteF1LgupMZ1ITWuC6lxXUiN60JqXBdS47qQGteF1LgupMZ1ITWuC6lxXUiN60JqXBdS47qQGteF1LgupMZ1ITWuC6lxXUiN60JqXBdS47qQGteF1LgupMZ1ITWuC6lxXUiN60JqXBdS47qQGteF1LgupMZ1ITWuC6lxXUiN60JqXBdS47qQGteF1LgupMZ1ITWuC6lxXUiN60JqXBdS47qQGteF1LgupMZ1ITWuC6lxXUiN60JqXBdS47qQGteF1LgupMZ1ITWuC6lxXUiN60JqXBdS47qQGteF1LgupMZ1ITWuC6lxXUiN60JqXBdS57qQOteF1LkupM51IfUX9jTtXBdS57qQOteF1LkupM51IXWuC6lzXUid60LqXBdS57qQOteF1LkupM51IXWuC6lzXUid60LqXBdS57qQOteF1LkupM51IXWuC6lzXUid60LqXBdS57qQOteF1LkupM51IXWuC6lzXUid60LqXBdS57qQOteF1LkupM51IXWuC6lzXUid60LqXBdS57qQOteF1LkupM51IXWuC6lzXUid60LqXBdS57qQOteF1LkupM51IXWuC6lzXUid60LqXBdS57qQOteF1LkupM51IXWuC6lzXUid60LqXBdS57qQOteF1LkupM51IXWuC6lzXUid60LqXBdS57qQOteF1LkupM51IXWuC6lzXUid60LqXBdS57qQOteF1LkupM51IXWuC6lzXUid60LqXBdS57qQOteF1LkupM51IXWuC6lzXUiD60IaXBfS4LqQBteFNF7Y03RwXUiD60IaXBfS4LqQBteFNLgupMF1IQ2uC2lwXUiD60IaXBfS4LqQBteFNLgupMF1IQ2uC2lwXUiD60IaXBfS4LqQBteFNLgupMF1IQ2uC2lwXUiD60IaXBfS4LqQBteFNLgupMF1IQ2uC2lwXUiD60IaXBfS4LqQBteFNLgupMF1IQ2uC2lwXUiD60IaXBfS4LqQBteFNLgupMF1IQ2uC2lwXUiD60IaXBfS4LqQBteFNLgupMF1IQ2uC2lwXUiD60IaXBfS4LqQBteFNLgupMF1IQ2uC2lwXUiD60IaXBfS4LqQBteFNLgupMF1IQ2uC2lwXUiD60IaXBfS4LqQBteFNLgupMF1IQ2uC2lwXUiD60IaXBfS4LqQBteFNLgupMF1IQ2uC2lwXUiD60IaXBfS4LqQBteFNLgupMF1IR1cF9LBdSEdXBfSwXUhHS/saXpwXUgH14V0cF1IB9eFdHBdSAfXhXRwXUgH14V0cF1IB9eFdHBdSAfXhXRwXUgH14V0cF1IB9eFdHBdSAfXhXRwXUgH14V0cF1IB9eFdHBdSAfXhXRwXUgH14V0cF1IB9eFdHBdSAfXhXRwXUgH14V0cF1IB9eFdHBdSAfXhXRwXUgH14V0cF1IB9eFdHBdSAfXhXRwXUgH14V0cF1IB9eFdHBdSAfXhXRwXUgH14V0cF1IB9eFdHBdSAfXhXRwXUgH14V0cF1IB9eFdHBdSAfXhXRwXUgH14V0cF1IB9eFdHBdSAfXhXRwXUgH14V0cF1IB9eFdHBdSAfXhXRwXUgH14V0cF1IB9eFdHBdSAfXhXRwXUgH14V0cF1IB9eFdHBdSAfXhXRwXUgH14V0cF1IB9eFdHBdSAfXhXRwXUgH14V0cF1IB9eFdHBdSCfXhXRyXUgn14V0cl1I5wt7mp5cF9LJdSGdXBfSyXUhnVwX0sl1IZ1cF9LJdSGdXBfSyXUhnVwX0sl1IZ1cF9LJdSGdXBfSyXUhnVwX0sl1IZ1cF9LJdSGdXBfSyXUhnVwX0sl1IZ1cF9LJdSGdXBfSyXUhnVwX0sl1IZ1cF9LJdSGdXBfSyXUhnVwX0sl1IZ1cF9LJdSGdXBfSyXUhnVwX0sl1IZ1cF9LJdSGdXBfSyXUhnVwX0sl1IZ1cF9LJdSGdXBfSyXUhnVwX0sl1IZ1cF9LJdSGdXBfSyXUhnVwX0sl1IZ1cF9LJdSGdXBfSyXUhnVwX0sl1IZ1cF9LJdSGdXBfSyXUhnVwX0sl1IZ1cF9LJdSGdXBfSyXUhnVwX0sl1IZ1cF9LJdSGdXBfSyXUhnVwX0sl1IZ1cF9LJdSGdXBfSyXUhnVwX0sl1IZ1cF9LJdSGdXBfSyXUhnVgXUnlhXUjvW6eepu9bp56m71unnqbvW6eepu9bp56m71unnqbvW6eepu9bp56m71vnnqZYF9L71rmnKdaF9L517mmKdSG9b517mmJdSO9b556mWBfS+9a5pynWhfS+de5pinUhvW+de5piXUjvW+eeplgX0vvWuacp1oX0vnXuaYp1Ib1vnXuaYl1I71vnnqZYF9L71rmnKdaF9L517mmKdSG9b517mmJdSO9b556mWBfS+9a5pynWhfS+de5pinUhvW+de5piXUjvW+eeplgX0vvWuacp1oX0vnXuaYp1Ib1vnXuaYl1I71vnnqZYF9L71rmnKdaF9L517mmKdSG9b517mmJdSO9b556mWBfS+9a5pynWhfS+de5pinUhvW+de5piXUjvW+eeplgX0vvWuacp1oX0vnXuaYp1Ib1vnXuaYl1I71vnnqZYF9L71rmnKdaF9L517mmKdSG9b517mmJdSO9b556mWBfS+9a5pynWhfS+de5pinUhvW+de5piXUjvW+eeplgX0vvWsadp4rqQEteFlLgupMR1IaUX9jRNXBdS4rqQEteFlLgupMR1ISWuCylxXUiJ60JKXBdS4rqQEteFlLgupMR1ISWuCylxXUiJ60JKXBdS4rqQEteFlLgupMR1ISWuCylxXUiJ60JKXBdS4rqQEteFlLgupMR1ISWuCylxXUiJ60JKXBdS4rqQEteFlLgupMR1ISWuCylxXUiJ60JKXBdS4rqQEteFlLgupMR1ISWuCylxXUiJ60JKXBdS4rqQEteFlLgupMR1ISWuCylxXUiJ60JKXBdS4rqQEteFlLgupMR1ISWuCylxXUiJ60JKXBdS4rqQEteFlLgupMR1ISWuCylxXUiJ60JKXBdS4rqQEteFlLgupMR1ISWuCylxXUiJ60JKXBdS4rqQEteFlLgupMR1ISWuCylxXUiJ60JKXBdS4rqQEteFlLgupMR1ISWuCylxXUiZ60LKXBdS5rqQMteFlF/Y0zRzXUiZ60LKXBdS5rqQMteFlLkupMx1IWWuCylzXUiZ60LKXBdS5rqQMteFlLkupMx1IWWuCylzXUiZ60LKXBdS5rqQMteFlLkupMx1IWWuCylzXUiZ60LKXBdS5rqQMteFlLkupMx1IWWuCylzXUiZ60LKXBdS5rqQMteFlLkupMx1IWWuCylzXUiZ60LKXBdS5rqQMteFlLkupMx1IWWuCylzXUiZ60LKXBdS5rqQMteFlLkupMx1IWWuCylzXUiZ60LKXBdS5rqQMteFlLkupMx1IWWuCylzXUiZ60LKXBdS5rqQMteFlLkupMx1IWWuCylzXUiZ60LKXBdS5rqQMteFlLkupMx1IWWuCylzXUiZ60LKXBdS5rqQMteFlLkupMx1IWWuCylzXUiZ60LKXBdS5rqQMteFlLkupMx1IRWuC6lwXUiF60IqXBdSeWFP08J1IRWuC6lwXUiF60IqXBdS4bqQCteFVLgupMJ1IRWuC6lwXUiF60IqXBdS4bqQCteFVLgupMJ1IRWuC6lwXUiF60IqXBdS4bqQCteFVLgupMJ1IRWuC6lwXUiF60IqXBdS4bqQCteFVLgupMJ1IRWuC6lwXUiF60IqXBdS4bqQCteFVLgupMJ1IRWuC6lwXUiF60IqXBdS4bqQCteFVLgupMJ1IRWuC6lwXUiF60IqXBdS4bqQCteFVLgupMJ1IRWuC6lwXUiF60IqXBdS4bqQCteFVLgupMJ1IRWuC6lwXUiF60IqXBdS4bqQCteFVLgupMJ1IRWuC6lwXUiF60IqXBdS4bqQCteFVLgupMJ1IRWuC6lwXUiF60IqXBdS4bqQCteFVLgupMJ1IRWuC6lwXUiF60IqXBdS4bqQCteFVLkupMp1IVWuC6lyXUj1hT1NK9eFVLkupMp1IVWuC6lyXUiV60KqXBdS5bqQKteFVLkupMp1IVWuC6lyXUiV60KqXBdS5bqQKteFVLkupMp1IVWuC6lyXUiV60KqXBdS5bqQKteFVLkupMp1IVWuC6lyXUiV60KqXBdS5bqQKteFVLkupMp1IVWuC6lyXUiV60KqXBdS5bqQKteFVLkupMp1IVWuC6lyXUiV60KqXBdS5bqQKteFVLkupMp1IVWuC6lyXUiV60KqXBdS5bqQKteFVLkupMp1IVWuC6lyXUiV60KqXBdS5bqQKteFVLkupMp1IVWuC6lyXUiV60KqXBdS5bqQKteFVLkupMp1IVWuC6lyXUiV60KqXBdS5bqQKteFVLkupMp1IVWuC6lyXUiV60KqXBdS5bqQKteFVLkupMp1IVWuC6lyXUiV60KqXBdS47qQGteF1LgupMZ1IbUX9jRtXBdS47qQGteF1LgupMZ1ITWuC6lxXUiN60JqXBdS47qQGteF1LgupMZ1ITWuC6lxXUiN60JqXBdS47qQGteF1LgupMZ1ITWuC6lxXUiN60JqXBdS47qQGteF1LgupMZ1ITWuC6lxXUiN60JqXBdS47qQGteF1LgupMZ1ITWuC6lxXUiN60JqXBdS47qQGteF1LgupMZ1ITWuC6lxXUiN60JqXBdS47qQGteF1LgupMZ1ITWuC6lxXUiN60JqXBdS47qQGteF1LgupMZ1ITWuC6lxXUiN60JqXBdS47qQGteF1LgupMZ1ITWuC6lxXUiN60JqXBdS47qQGteF1LgupMZ1ITWuC6lxXUiN60JqXBdS47qQGteF1LgupMZ1ITWuC6lxXUiN60JqXBdS47qQGteF1LgupMZ1ITWuC6lxXUid60LqXBdS57qQOteF1F/Y07RzXUid60LqXBdS57qQOteF1LkupM51IXWuC6lzXUid60LqXBdS57qQOteF1LkupM51IXWuC6lzXUid60LqXBdS57qQOteF1LkupM51IXWuC6lzXUid60LqXBdS57qQOteF1LkupM51IXWuC6lzXUid60LqXBdS57qQOteF1LkupM51IXWuC6lzXUid60LqXBdS57qQOteF1LkupM51IXWuC6lzXUid60LqXBdS57qQOteF1LkupM51IXWuC6lzXUid60LqXBdS57qQOteF1LkupM51IXWuC6lzXUid60LqXBdS57qQOteF1LkupM51IXWuC6lzXUid60LqXBdS57qQOteF1LkupM51IXWuC6lzXUid60LqXBdS57qQOteF1LkupM51IXWuC6lzXUid60LqXBdS57qQOteF1LkupM51IQ2uC2lwXUiD60IaXBfSeGFP08F1IQ2uC2lwXUiD60IaXBfS4LqQBteFNLgupMF1IQ2uC2lwXUiD60IaXBfS4LqQBteFNLgupMF1IQ2uC2lwXUiD60IaXBfS4LqQBteFNLgupMF1IQ2uC2lwXUiD60IaXBfS4LqQBteFNLgupMF1IQ2uC2lwXUiD60IaXBfS4LqQBteFNLgupMF1IQ2uC2lwXUiD60IaXBfS4LqQBteFNLgupMF1IQ2uC2lwXUiD60IaXBfS4LqQBteFNLgupMF1IQ2uC2lwXUiD60IaXBfS4LqQBteFNLgupMF1IQ2uC2lwXUiD60IaXBfS4LqQBteFNLgupMF1IQ2uC2lwXUiD60IaXBfS4LqQBteFNLgupMF1IQ2uC2lwXUiD60IaXBfS4LqQBteFNLgupMF1IQ2uC2lwXUiD60IaXBfS4LqQBteFdHBdSAfXhXRwXUgH14V0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XUiN60JqXBdS47qQGteF1LgupMZ1ITWuC6lxXUiN60JqXBdS47qQGteF1LgupMZ1ITWuC6lxXUiN60JqXBdS47qQGteF1LgupMZ1IXWuC6lzXUid60LqXBdSf2FP0851IXWuC6lzXUid60LqXBdS57qQOteF1LkupM51IXWuC6lzXUid60LqXBdS57qQOteF1LkupM51IXWuC6lzXUid60LqXBdS57qQOteF1LkupM51IXWuC6lzXUid60LqXBdS57qQOteF1LkupM51IXWuC6lzXUid60LqXBdS57qQOteF1LkupM51IXWuC6lzXUid60LqXBdS57qQOteF1LkupM51IXWuC6lzXUid60LqXBdS57qQOteF1LkupM51IXWuC6lzXUid60LqXBdS57qQOteF1LkupM51IXWuC6lzXUid60LqXBdS57qQOteF1LkupM51IXWuC6lzXUid60LqXBdS57qQOteF1LkupM51IXWuC6lzXUid60LqXBdS57qQOteF1LkupM51IXWuC6lzXUid60LqXBdS57qQOteFNLgupMF1IQ2uC2lwXUjjhT1NB9eFNLgupMF1IQ2uC2lwXUiD60IaXBfS4LqQBteFNLgupMF1IQ2uC2lwXUiD60IaXBfS4LqQBteFNLgupMF1IQ2uC2lwXUiD60IaXBfS4LqQBteFNLgupMF1IQ2uC2lwXUiD60IaXBfS4LqQBteFNLgupMF1IQ2uC2lwXUiD60IaXBfS4LqQBteFNLgupMF1IQ2uC2lwXUiD60IaXBfS4LqQBteFNLgupMF1IQ2uC2lwXUiD60IaXBfS4LqQBteFNLgupMF1IQ2uC2lwXUiD60IaXBfS4LqQBteFNLgupMF1IQ2uC2lwXUiD60IaXBfS4LqQBteFNLgupMF1IQ2uC2lwXUiD60IaXBfS4LqQBteFNLgupMF1IQ2uC2lwXUiD60IaXBfS4LqQBteFNLgupMF1IQ2uC2lwXUjj1i6k88drW615+tpy/LiHWuvXK8989Z+tP/6r/fXzBs5y8dLcev6BoY3x8w5eV//dI/242/P8+3/3L9B3PvsfBPq4tWfqUaDvnKseBfrOKfBRoO+cWR8F+s4J+1Gg79wHHgX6zu3lUaDv3LUeBdrN8A+BdjP8M6Bv7Uz834Nu7Reg/6LnuveHPqaue38ItOveHwLtuveHQLvu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qGltgprWRqhpbYaa1oaoaW2KmtbGqGltjprWBqlpbZKa1kapaW2WmtaGqWltmprWxqlpbZ6a1gaqaW2imtZGqmltpprWhqppbaqa1saqaW2umtYGq2ltsprWRqtpbbaa1oaraW26mtbGq2ltvprWBqxpbcKa1kasaW3GmtaGrGltyprWxqxpbc6a1gataW3SmtZGrWlt1prWhq1pbdqa1sataW3emtYGrmlt4prWRq5pbeaa1oauaW3qmtbGrmlt7prWBq9pbfKa1kavaW32mtdmr3lt9prXZq95bfaa12aveW32mtdmr3lt9prXZq95bfaa12aveW32mtdmr3lt9prXZq95bfaa12aveW32mtdmr3nxe6qLX1Rd/abq2qdk8buqi19WXfy26uLXVRe/r7r4hdW12Wtem73mtdlrXpu95rXZa16bvea12Wtem73mtdlrXpu95rXZa16bvea12Wtem73mtdlrXpu95rXZa16bvea12Wtem73mtdlrXpu95rXZa16bvea12Wtem73mtdlrXpu95rXZa16bvea12Wtem73mtdlrXpu95rXZa16bvea12Wtem73mtdlrXpu95rXZa16bvea12Wtem73mtdlrXpu95rXZa16bvea12Wtem73mtdlrXpu95rXZa16bvea12Wtem73mtdlrXpu95rXZa16bvea12Wtem73mtdlrXpu95rXZa16bvea12Wtem73mtdlrXpu95rXZa1mbvZa12WtZm72WtdlrWZu9lrXZa1mbvZa12WtZm72WtdlrWZu9lrXZa1mbvZa12WtZm72WtdlrWZu9lrXZa1mbvZa12WtZm72WtdlrWZu9lrXZa1mbvZa12WtZm72WtdlrWZu9lkVbwKIuYNEXsCoMWPuULCoDFp0Bi9KARWvAojZgbfZa1mavZW32WtZmr2Vt9lrWZq9lbfZa1mavZW32WtZmr2Vt9lrWZq9lbfZa1mavZW32WtZmr2Vt9lrWZq9lbfZa1mavZW32WtZmr2Vt9lrWZq9lbfZa1mavZW32WtZmr2Vt9lrWZq9lbfZa1mavZW32WtZmr2Vt9lrWZq9lbfZa1mavZW32WtZmr2Vt9lrWZq9lbfZa1mavZW32WtZmr2Vt9lrWZq9lbfZa1mavZW32WtZmr2Vt9lrWZq9lbfZa1mavZW32WtZmr2Vt9lrWZq9lbfZa12avdW32Wtdmr3Vt9lrXZq91bfZa12avdW32Wtdmr3Vt9lrXZq91bfZa12avdW32Wtdmr3Vt9lrXZq91bfZa12avdW32Wtdmr3Vt9lrXZq91bfZa12avdW32Wtdmr3Vt9lrXZq91bfZa12avdW32Wtdmr3Vt9lrXZq91bfZa12avdW32Wtdmr3XR2boobV20ti5qW1e9rWufkkVz66K6ddHduihvXZu91rXZa12bvda12Wtdm73WtdlrXZu91rXZa12bvda12Wtdm73WtdlrXZu91rXZa12bvda12Wtdm73WtdnrL1bcx5etfUrWZq+/2GoeX7b2KVmbvf5ikXV82dqnZG32+ovdxfFla5+StdnrL9bVhpetzV5/sVA1vmztU7I2e/3FDs34srVPydrs9RdrE+PL1j4la7PXX2zKiy9b+5SszV5/sRwtvmztU7I2e/3FPqz4srVPydrs9RcrkKLLfrFTKL5sbfvA2uy1rc1e29rsta3NXtva7LWtzV7b2uy1rc1e29rsta3NXtva7LWtzV7b2uy1rc1e29rsta3NXtva7LWtzV7b2uy1rc1e29rsta3NXtva7LWtzV7b2uy1rc1e29rstf3O7PX8ftnvzF6vLvuNT8nVZb/xKbm67Dc+JVeX/can5Oqy3/iUXF32G5+Sq8t+41NyddlvfEquLlv7lPzO7PXqsrVPye/MXq8uW/uU/M7s9eqytU/J78xery5b+5T8zuz16rK1T8nvzF6vLlv7lPzO7PXqsvhTch5/v+xi/WnPf722j58rM0v58SfEHyj1T4g/e+qfEH9MxT/hN8Zd//4n/HXZf/v2/XXZf/ue/HXZfwv6r8v+W3p/XRb/kF9eFv+QX14W/5BfXfYb467Lyy5/yHM601+X5ZLr12W9/bjseil9eNn1lvfwsstPSXzZ9R7y8LLrxd7hZdebssPLrldPh5dd73KOLrsed8WXrX1Krsdd8WVrn5LrcVd82dqn5Bfr38PL1j4lv1hQHl629Cnpv1ihHV629Cnp1+Ou+LKlT0m/HnfFly19Svr1uCu+bOlT0q/HXfFla5+S63FXfNnap+R63BVftvYpuR53xZetfUqux13xZWufkutxV3zZ2qfketwVX7b2Kbked8WXrX1Krsdd8WVrn5LrcVd82dqn5HrcFV+29im5HnfFl619Sq7HXfFla5+S63FX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",
      "",
      ""
    ],
    "fileMap": {
      "1": {
        "source": "mod public_key_note;\nmod webauthn;\nmod utils;\nmod base64;\n\n// Account contract that uses Schnorr signatures for authentication.\n// The signing key is stored in an immutable private note and should be different from the encryption/nullifying key.\ncontract WebAuthnAccount {\n    use dep::std;\n    use dep::std::option::Option;\n\n    use dep::aztec::{\n        context::{PrivateContext, Context},\n        note::{ note_header::NoteHeader, utils as note_utils },\n        oracle::get_public_key::get_public_key,\n        state_vars::immutable_singleton::ImmutableSingleton,\n    };\n    use dep::authwit:: {\n        entrypoint::{ EntrypointPayload, ENTRYPOINT_PAYLOAD_SIZE },\n        account::AccountActions,\n        auth_witness::get_auth_witness,\n    };\n    use dep::aztec::log::{\n        emit_unencrypted_log_from_private,\n        emit_unencrypted_log,\n    };\n\n    use crate::public_key_note::{PublicKeyNote, PublicKeyNoteMethods, PUBLIC_KEY_NOTE_LEN};\n    use crate::webauthn::{validate_webauthn_signature, CLIENT_DATA_JSON_MAX_LEN};\n    use crate::utils::convert_field_to_array;\n    use crate::base64::base64_encode_url_safe_no_pad;\n\n    struct Storage {\n        // docs:start:storage\n        signing_public_key: ImmutableSingleton<PublicKeyNote, PUBLIC_KEY_NOTE_LEN>,\n        // docs:end:storage\n    }\n\n    impl Storage {\n        fn init(context: Context) -> Self {\n            Storage {\n                // docs:start:storage_init\n                signing_public_key: ImmutableSingleton::new(context, 1, PublicKeyNoteMethods),\n                // docs:end:storage_init\n            }\n        }\n    }\n\n    global ACCOUNT_ACTIONS_STORAGE_SLOT = 2;\n\n    // Constructs the contract\n    #[aztec(private)]\n    fn constructor(\n        signing_pub_key_x: pub [u8; 32],\n        signing_pub_key_y: pub [u8; 32],\n    ) {\n        emit_unencrypted_log_from_private(&mut context, \"constructor\");\n        let this = context.this_address();\n        // docs:start:initialize\n        let mut pub_key_note = PublicKeyNote::new(signing_pub_key_x, signing_pub_key_y, this);\n        storage.signing_public_key.initialize(&mut pub_key_note, Option::none(), true);\n        // docs:end:initialize\n    }\n\n    #[aztec(private)]\n    fn entrypoint(payload: pub EntrypointPayload) {\n        emit_unencrypted_log_from_private(&mut context, \"entrypoint\");\n        let actions = AccountActions::private(&mut context, ACCOUNT_ACTIONS_STORAGE_SLOT, is_valid_impl);\n        actions.entrypoint(payload);\n    }\n\n    #[aztec(private)]\n    fn is_valid(message_hash: Field) -> Field {\n        emit_unencrypted_log_from_private(&mut context, \"is_valid\");\n        let actions = AccountActions::private(&mut context, ACCOUNT_ACTIONS_STORAGE_SLOT, is_valid_impl);\n        actions.is_valid(message_hash)\n    }\n\n    #[aztec(public)]\n    fn is_valid_public(message_hash: Field) -> Field {\n        emit_unencrypted_log(&mut context, \"is_valid_public\");\n        let actions = AccountActions::public(&mut context, ACCOUNT_ACTIONS_STORAGE_SLOT, is_valid_impl);\n        actions.is_valid_public(message_hash)\n    }\n\n    #[aztec(public)]\n    internal fn set_is_valid_storage(message_hash: Field, value: bool) {\n        emit_unencrypted_log(&mut context, \"set_is_valid_storage\");\n        let actions = AccountActions::public(&mut context, ACCOUNT_ACTIONS_STORAGE_SLOT, is_valid_impl);\n        actions.internal_set_is_valid_storage(message_hash, value)\n    }\n\n    #[contract_library_method]\n    fn is_valid_impl(context: &mut PrivateContext, message_hash: Field) -> pub bool {\n        emit_unencrypted_log_from_private(context, \"is_valid_impl\");\n\n        // Load public key from storage\n        let storage = Storage::init(Context::private(context));\n\n        let public_key = storage.signing_public_key.get_note();\n\n        // Load auth witness\n        let witness: [Field; WEBAUTHN_WITNESS_MAX_LEN] = get_auth_witness(message_hash);\n        deserialize_and_validate_webauthn_witness(witness, message_hash, public_key.x, public_key.y);\n\n        true\n    }\n\n    global SIGNATURE_LEN = 64;\n    global AUTHENTICATOR_DATA_LEN = 37;\n    global WEBAUTHN_WITNESS_MAX_LEN = 357; // SIGNATURE_LEN + AUTHENTICATOR_DATA_LEN + CLIENT_DATA_JSON_MAX_LEN + 1\n    global CHALLENGE_LEN = 43;\n\n    fn deserialize_and_validate_webauthn_witness(witness: [Field; WEBAUTHN_WITNESS_MAX_LEN], challenge_field: Field, public_key_x: [u8; 32], public_key_y: [u8; 32]) {\n        let mut signature: [u8; 64] = [0; 64];\n        let mut authenticator_data: [u8; 37] = [0; 37];\n        let mut client_data_json_len: u8 = 0;\n        let mut client_data_json: [u8; CLIENT_DATA_JSON_MAX_LEN] = [0; CLIENT_DATA_JSON_MAX_LEN];\n\n        let challenge_array: [u8; 32] = convert_field_to_array(challenge_field);\n        let challenge_base64: [u8; CHALLENGE_LEN] = base64_encode_url_safe_no_pad(challenge_array, [0; CHALLENGE_LEN]);\n\n        for i in 0..SIGNATURE_LEN {\n            signature[i] = witness[i] as u8;\n        }\n        for i in 0..AUTHENTICATOR_DATA_LEN {\n            authenticator_data[i] = witness[i + SIGNATURE_LEN] as u8;\n        }\n\n        client_data_json_len = witness[(SIGNATURE_LEN + AUTHENTICATOR_DATA_LEN)] as u8;\n        for i in 0..CLIENT_DATA_JSON_MAX_LEN {\n            client_data_json[i] = witness[i + (SIGNATURE_LEN + AUTHENTICATOR_DATA_LEN + 1)] as u8;\n        }\n        validate_webauthn_signature(authenticator_data, client_data_json_len, client_data_json, signature, challenge_base64, public_key_x, public_key_y);\n    }\n\n    // Computes notes hash and nullifier.\n    // Note 1: Needs to be defined by every contract producing logs.\n    // Note 2: Having it in all the contracts gives us the ability to compute the note hash and nullifier differently for different kind of notes.\n    unconstrained fn compute_note_hash_and_nullifier(contract_address: Field, nonce: Field, storage_slot: Field, preimage: [Field; PUBLIC_KEY_NOTE_LEN]) -> [Field; 4] {\n        assert(storage_slot == 1);\n        let note_header = NoteHeader::new(contract_address, nonce, storage_slot);\n        note_utils::compute_note_hash_and_nullifier(PublicKeyNoteMethods, note_header, preimage)\n    }\n}\n",
        "path": "/Users/marek/Projects/quetzal/src/contracts/webauthn_account_contract/src/main.nr"
      },
      "10": {
        "source": "\n// TODO: Once we fully move to the new SSA pass this module can be removed and replaced\n// by the methods in the `slice` module\nimpl<T, N> [T; N] {\n    #[builtin(array_len)]\n    pub fn len(_self: Self) -> Field {}\n\n    #[builtin(arraysort)]\n    pub fn sort(_self: Self) -> Self {}\n\n    // Sort with a custom sorting function.\n    pub fn sort_via<Env>(mut a: Self, ordering: fn[Env](T, T) -> bool) -> Self { \n        for i in 1 .. a.len() {\n            for j in 0..i {\n                if ordering(a[i], a[j]) {\n                    let old_a_j = a[j];\n                    a[j] = a[i];\n                    a[i] = old_a_j;\n                }\n            }\n        }\n        a\n    }\n\n    // Converts an array into a slice.\n    pub fn as_slice(self) -> [T] {\n        let mut slice = [];\n        for elem in self {\n            slice = slice.push_back(elem);\n        }\n        slice\n    }\n\n    // Apply a function to each element of an array, returning a new array\n    // containing the mapped elements.\n    pub fn map<U, Env>(self, f: fn[Env](T) -> U) -> [U; N] {\n        let first_elem = f(self[0]);\n        let mut ret = [first_elem; N];\n\n        for i in 1 .. self.len() {\n            ret[i] = f(self[i]);\n        }\n\n        ret\n    }\n\n    // Apply a function to each element of the array and an accumulator value,\n    // returning the final accumulated value. This function is also sometimes\n    // called `foldl`, `fold_left`, `reduce`, or `inject`.\n    pub fn fold<U, Env>(self, mut accumulator: U, f: fn[Env](U, T) -> U) -> U {\n        for elem in self {\n            accumulator = f(accumulator, elem);\n        }\n        accumulator\n    }\n\n    // Apply a function to each element of the array and an accumulator value,\n    // returning the final accumulated value. Unlike fold, reduce uses the first\n    // element of the given array as its starting accumulator value.\n    pub fn reduce<Env>(self, f: fn[Env](T, T) -> T) -> T {\n        let mut accumulator = self[0];\n        for i in 1 .. self.len() {\n            accumulator = f(accumulator, self[i]);\n        }\n        accumulator\n    }\n\n    // Returns true if all elements in the array satisfy the predicate\n    pub fn all<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = true;\n        for elem in self {\n            ret &= predicate(elem);\n        }\n        ret\n    }\n\n    // Returns true if any element in the array satisfies the predicate\n    pub fn any<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = false;\n        for elem in self {\n            ret |= predicate(elem);\n        }\n        ret\n    }\n}\n",
        "path": "std/array.nr"
      },
      "17": {
        "source": "struct GrumpkinScalar {\n    low: Field,\n    high: Field,\n}\n\nimpl GrumpkinScalar {\n    pub fn new(low: Field, high: Field) -> Self {\n        // TODO: check that the low and high value fit within the grumpkin modulus\n        GrumpkinScalar { low, high }\n    }\n}\n\nglobal GRUMPKIN_SCALAR_SERIALIZED_LEN: Field = 2;\n\npub fn deserialize_grumpkin_scalar(fields: [Field; GRUMPKIN_SCALAR_SERIALIZED_LEN]) -> GrumpkinScalar {\n    GrumpkinScalar { low: fields[0], high: fields[1] }\n}\n\npub fn serialize_grumpkin_scalar(scalar: GrumpkinScalar) -> [Field; GRUMPKIN_SCALAR_SERIALIZED_LEN] {\n    [scalar.low, scalar.high]\n}\n",
        "path": "std/grumpkin_scalar.nr"
      },
      "18": {
        "source": "use crate::grumpkin_scalar::GrumpkinScalar;\nuse crate::scalar_mul::fixed_base_embedded_curve;\n\npub fn grumpkin_fixed_base(scalar: GrumpkinScalar) -> [Field; 2] {\n    // TODO: this should use both the low and high limbs to do the scalar multiplication\n    fixed_base_embedded_curve(scalar.low, scalar.high)\n}\n",
        "path": "std/grumpkin_scalar_mul.nr"
      },
      "22": {
        "source": "\nimpl Field {\n    pub fn to_le_bits(self: Self, bit_size: u32) -> [u1] {\n        crate::assert_constant(bit_size);\n        self.__to_le_bits(bit_size)\n    }\n    \n    pub fn to_be_bits(self: Self, bit_size: u32) -> [u1] {\n        crate::assert_constant(bit_size);\n        self.__to_be_bits(bit_size)\n    }\n\n    #[builtin(to_le_bits)]\n    fn __to_le_bits(_self: Self, _bit_size: u32) -> [u1] {}\n    \n    #[builtin(to_be_bits)]\n    fn __to_be_bits(_self: Self, _bit_size: u32) -> [u1] {}\n\n    pub fn to_le_bytes(self: Self, byte_size: u32) -> [u8] {\n        self.to_le_radix(256, byte_size)\n    }\n\n    pub fn to_be_bytes(self: Self, byte_size: u32) -> [u8] {\n        self.to_be_radix(256, byte_size)\n    }\n\n\n    pub fn to_le_radix(self: Self, radix: u32, result_len: u32) -> [u8] {\n        crate::assert_constant(radix);\n        crate::assert_constant(result_len);\n        self.__to_le_radix(radix, result_len)\n    }\n\n    pub fn to_be_radix(self: Self, radix: u32, result_len: u32) -> [u8] {\n        crate::assert_constant(radix);\n        crate::assert_constant(result_len);\n        self.__to_be_radix(radix, result_len)\n    }\n\n\n\n    // decompose `_self` into a `_result_len` vector over the `_radix` basis\n    // `_radix` must be less than 256\n    #[builtin(to_le_radix)]\n    fn __to_le_radix(_self: Self, _radix: u32, _result_len: u32) -> [u8] {}\n    \n    #[builtin(to_be_radix)]\n    fn __to_be_radix(_self: Self, _radix: u32, _result_len: u32) -> [u8] {}\n\n\n    // Returns self to the power of the given exponent value.\n    // Caution: we assume the exponent fits into 32 bits\n    // using a bigger bit size impacts negatively the performance and should be done only if the exponent does not fit in 32 bits\n    pub fn pow_32(self, exponent: Field) -> Field {\n        let mut r: Field = 1;\n        let b = exponent.to_le_bits(32);\n\n        for i in 1..33 {\n            r *= r;\n            r = (b[32-i] as Field) * (r * self) + (1 - b[32-i] as Field) * r;\n        }\n        r\n    }\n\n    // Parity of (prime) Field element, i.e. sgn0(x mod p) = 0 if x ∈ {0, ..., p-1} is even, otherwise sgn0(x mod p) = 1.\n    pub fn sgn0(self) -> u1 {\n        self as u1\n    }\n}\n\n#[builtin(modulus_num_bits)]\npub fn modulus_num_bits() -> Field {}\n\n#[builtin(modulus_be_bits)]\npub fn modulus_be_bits() -> [u1] {}\n\n#[builtin(modulus_le_bits)]\npub fn modulus_le_bits() -> [u1] {}\n\n#[builtin(modulus_be_bytes)]\npub fn modulus_be_bytes() -> [u8] {}\n\n#[builtin(modulus_le_bytes)]\npub fn modulus_le_bytes() -> [u8] {}\n\n// Convert a 32 byte array to a field element\npub fn bytes32_to_field(bytes32 : [u8; 32]) -> Field {\n    // Convert it to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..16 {\n        high = high + (bytes32[15 - i] as Field) * v;\n        low = low + (bytes32[16 + 15 - i] as Field) * v;\n        v = v * 256;\n    }\n\n    // Abuse that a % p + b % p = (a + b) % p and that low < p\n    low + high * v\n}",
        "path": "std/field.nr"
      },
      "33": {
        "source": "struct Option<T> {\n    _is_some: bool,\n    _value: T,\n}\n\nimpl<T> Option<T> {\n    /// Constructs a None value\n    pub fn none() -> Self {\n        Self { _is_some: false, _value: crate::unsafe::zeroed() }\n    }\n\n    /// Constructs a Some wrapper around the given value\n    pub fn some(_value: T) -> Self {\n        Self { _is_some: true, _value }\n    }\n\n    /// True if this Option is None\n    pub fn is_none(self) -> bool {\n        !self._is_some\n    }\n\n    /// True if this Option is Some\n    pub fn is_some(self) -> bool {\n        self._is_some\n    }\n\n    /// Asserts `self.is_some()` and returns the wrapped value.\n    pub fn unwrap(self) -> T {\n        assert(self._is_some);\n        self._value\n    }\n\n    /// Returns the inner value without asserting `self.is_some()`\n    /// Note that if `self` is `None`, there is no guarantee what value will be returned,\n    /// only that it will be of type `T`.\n    pub fn unwrap_unchecked(self) -> T {\n        self._value\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, returns the given default value.\n    pub fn unwrap_or(self, default: T) -> T {\n        if self._is_some {\n            self._value\n        } else {\n            default\n        }\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, calls the given function to return\n    /// a default value.\n    pub fn unwrap_or_else<Env>(self, default: fn[Env]() -> T) -> T {\n        if self._is_some {\n            self._value\n        } else {\n            default()\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `Some(f(x))`. Otherwise, this returns `None`.\n    pub fn map<U, Env>(self, f: fn[Env](T) -> U) -> Option<U> {\n        if self._is_some {\n            Option::some(f(self._value))\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns the given default value.\n    pub fn map_or<U, Env>(self, default: U, f: fn[Env](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns `default()`.\n    pub fn map_or_else<U, Env1, Env2>(self, default: fn[Env1]() -> U, f: fn[Env2](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default()\n        }\n    }\n\n    /// Returns None if self is None. Otherwise, this returns `other`.\n    pub fn and(self, other: Self) -> Self {\n        if self.is_none() {\n            Option::none()\n        } else {\n            other\n        }\n    }\n\n    /// If self is None, this returns None. Otherwise, this calls the given function\n    /// with the Some value contained within self, and returns the result of that call.\n    ///\n    /// In some languages this function is called `flat_map` or `bind`.\n    pub fn and_then<U, Env>(self, f: fn[Env](T) -> Option<U>) -> Option<U> {\n        if self._is_some {\n            f(self._value)\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is Some, return self. Otherwise, return `other`.\n    pub fn or(self, other: Self) -> Self {\n        if self._is_some {\n            self\n        } else {\n            other\n        }\n    }\n\n    /// If self is Some, return self. Otherwise, return `default()`.\n    pub fn or_else<U, Env>(self, default: fn[Env]() -> Self) -> Self {\n        if self._is_some {\n            self\n        } else {\n            default()\n        }\n    }\n\n    // If only one of the two Options is Some, return that option.\n    // Otherwise, if both options are Some or both are None, None is returned.\n    pub fn xor(self, other: Self) -> Self {\n        if self._is_some {\n            if other._is_some {\n                Option::none()\n            } else {\n                self\n            }\n        } else if other._is_some {\n            other\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Returns `Some(x)` if self is `Some(x)` and `predicate(x)` is true.\n    /// Otherwise, this returns `None`\n    pub fn filter<Env>(self, predicate: fn[Env](T) -> bool) -> Self {\n        if self._is_some {\n            if predicate(self._value) {\n                self\n            } else {\n                Option::none()\n            }\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Flattens an Option<Option<T>> into a Option<T>.\n    /// This returns None if the outer Option is None. Otherwise, this returns the inner Option.\n    pub fn flatten(option: Option<Option<T>>) -> Option<T> {\n        if option._is_some {\n            option._value\n        } else {\n            Option::none()\n        }\n    }\n}\n",
        "path": "std/option.nr"
      },
      "36": {
        "source": "use crate::constants_gen::{\n    RETURN_VALUES_LENGTH,\n    MAX_READ_REQUESTS_PER_CALL,\n    MAX_PENDING_READ_REQUESTS_PER_CALL,\n    MAX_NEW_COMMITMENTS_PER_CALL,\n    MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n    NUM_FIELDS_PER_SHA256,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n    MAX_PUBLIC_DATA_READS_PER_CALL,\n    GENERATOR_INDEX__FUNCTION_ARGS,\n    HISTORIC_BLOCK_DATA_LENGTH,\n    CONTRACT_DEPLOYMENT_DATA_LENGTH,\n    CALL_CONTEXT_LENGTH,\n    PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH,\n    PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH,\n    CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH,\n    CONTRACT_STORAGE_READ_LENGTH,\n    PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH,\n    PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH,\n    GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS,\n    GENERATOR_INDEX__FUNCTION_DATA,\n    GENERATOR_INDEX__PUBLIC_DATA_READ,\n    GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST,\n    GENERATOR_INDEX__CALL_CONTEXT,\n    GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS,\n    GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA,\n};\n\nuse crate::oracle::debug_log;\nuse crate::types::vec::BoundedVec;\nuse crate::types::point::Point;\nuse crate::hash::pedersen_hash;\n\n// docs:start:private-global-variables\nstruct PrivateGlobalVariables {\n    chain_id: Field,\n    version: Field,\n}\n// docs:end:private-global-variables\n\nimpl PrivateGlobalVariables {\n    fn serialize(self) -> [Field; 2] {\n        [self.chain_id, self.version]\n    }\n}\n\n// docs:start:public-global-variables\nstruct PublicGlobalVariables {\n    chain_id: Field,\n    version: Field,\n    block_number: Field,\n    timestamp: Field,\n}\n// docs:end:public-global-variables\n\nimpl PublicGlobalVariables {\n    fn serialize(self) -> [Field; 4] {\n        [self.chain_id, self.version, self.block_number, self.timestamp]\n    }\n}\n\n// docs:start:contract-deployment-data\nstruct ContractDeploymentData {\n    deployer_public_key: Point,\n    constructor_vk_hash : Field,\n    function_tree_root : Field,\n    contract_address_salt : Field,\n    portal_contract_address : Field,\n}\n// docs:end:contract-deployment-data\n\nimpl ContractDeploymentData {\n    fn serialize(self) -> [Field; CONTRACT_DEPLOYMENT_DATA_LENGTH] {\n        [\n            self.deployer_public_key.x,\n            self.deployer_public_key.y,\n            self.constructor_vk_hash,\n            self.function_tree_root,\n            self.contract_address_salt,\n            self.portal_contract_address,\n        ]\n    }\n\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA)\n    }\n}\n\n// PrivateContextInputs are expected to be provided to each private function\n// docs:start:private-context-inputs\nstruct PrivateContextInputs {\n    call_context : CallContext,\n    block_data: HistoricBlockData,\n    contract_deployment_data: ContractDeploymentData,\n    private_global_variables: PrivateGlobalVariables,\n}\n// docs:end:private-context-inputs\n\n// PublicContextInputs are expected to be provided to each public function\n// docs:start:public-context-inputs\nstruct PublicContextInputs {\n    call_context: CallContext,\n    block_data: HistoricBlockData,\n\n    public_global_variables: PublicGlobalVariables,\n}\n// docs:end:public-context-inputs\n\n// docs:start:call-context\nstruct CallContext {\n    msg_sender : Field,\n    storage_contract_address : Field,\n    portal_contract_address : Field,\n    function_selector: Field,\n\n    is_delegate_call : bool,\n    is_static_call : bool,\n    is_contract_deployment: bool,\n}\n// docs:end:call-context\n\nimpl CallContext {\n    fn serialize(self) -> [Field; CALL_CONTEXT_LENGTH] {\n        [\n            self.msg_sender,\n            self.storage_contract_address,\n            self.portal_contract_address,\n            self.function_selector,\n            self.is_delegate_call as Field,\n            self.is_static_call as Field,\n            self.is_contract_deployment as Field,\n        ]\n    }\n\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__CALL_CONTEXT)\n    }\n}\n\n// docs:start:historic-block-data\nstruct HistoricBlockData {\n    note_hash_tree_root : Field,\n    nullifier_tree_root : Field,\n    contract_tree_root : Field,\n    l1_to_l2_messages_tree_root : Field,\n    blocks_tree_root: Field,\n    public_data_tree_root: Field,\n    global_variables_hash: Field,\n}\n// docs:end:historic-block-data\n\nimpl HistoricBlockData {\n    // NOTE: this order must match the order in `private_circuit_public_inputs.hpp`\n    pub fn serialize(self) -> [Field; HISTORIC_BLOCK_DATA_LENGTH] {\n        [\n            self.note_hash_tree_root,\n            self.nullifier_tree_root,\n            self.contract_tree_root,\n            self.l1_to_l2_messages_tree_root,\n            self.blocks_tree_root,\n            self.public_data_tree_root,\n            self.global_variables_hash,\n        ]\n    }\n\n    pub fn empty() -> Self {\n        Self { note_hash_tree_root: 0, nullifier_tree_root: 0, contract_tree_root: 0, l1_to_l2_messages_tree_root: 0, blocks_tree_root: 0, public_data_tree_root: 0, global_variables_hash: 0 }\n    }\n}\n\nstruct FunctionData {\n    function_selector: Field,\n    is_internal: bool,\n    is_private: bool,\n    is_constructor: bool,\n}\n\nimpl FunctionData {\n    fn hash(self) -> Field {\n        pedersen_hash([\n            self.function_selector,\n            self.is_internal as Field,\n            self.is_private as Field,\n            self.is_constructor as Field,\n        ], GENERATOR_INDEX__FUNCTION_DATA)\n    }\n}\n\nstruct PrivateCircuitPublicInputs {\n    call_context: CallContext,\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n    read_requests: [Field; crate::abi::MAX_READ_REQUESTS_PER_CALL],\n    pending_read_requests: [Field; crate::abi::MAX_PENDING_READ_REQUESTS_PER_CALL],\n    new_commitments: [Field; MAX_NEW_COMMITMENTS_PER_CALL],\n    new_nullifiers: [Field; MAX_NEW_NULLIFIERS_PER_CALL],\n    nullified_commitments: [Field; MAX_NEW_NULLIFIERS_PER_CALL],\n    private_call_stack: [Field; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL],\n    public_call_stack: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_l2_to_l1_msgs: [Field; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n    // Explore introducing a new type like uint256 (similar to Point), so it's more explicit that\n    // we're talking about a single number backed by two field elements.\n    encrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    unencrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    encrypted_log_preimages_length: Field,\n    unencrypted_log_preimages_length: Field,\n    block_data: HistoricBlockData,\n    contract_deployment_data: ContractDeploymentData,\n    chain_id: Field,\n    version: Field,\n}\n\nimpl PrivateCircuitPublicInputs {\n    fn hash(self) -> Field {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH> = BoundedVec::new(0); \n        fields.push(self.call_context.hash());\n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        fields.push_array(self.read_requests);\n        fields.push_array(self.pending_read_requests);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.nullified_commitments);\n        fields.push_array(self.private_call_stack);\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.encrypted_logs_hash);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_data.serialize());\n        fields.push(self.contract_deployment_data.hash());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n\n        pedersen_hash(fields.storage, GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS)\n    }\n\n    fn serialize(self) -> [Field; PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new(0); \n        fields.push_array(self.call_context.serialize());\n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        fields.push_array(self.read_requests);\n        fields.push_array(self.pending_read_requests);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.private_call_stack);\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.encrypted_logs_hash);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_data.serialize());\n        fields.push_array(self.contract_deployment_data.serialize());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n        fields.storage\n    }\n}\n\nstruct ContractStorageRead {\n    storage_slot: Field,\n    value: Field,\n}\n\nimpl ContractStorageRead {\n    pub fn serialize(self) -> [Field; CONTRACT_STORAGE_READ_LENGTH] {\n        [self.storage_slot, self.value]\n    }\n\n    pub fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__PUBLIC_DATA_READ)\n    }\n\n    pub fn empty() -> Self {\n        Self { storage_slot: 0, value: 0 }\n    }\n}\n\nstruct ContractStorageUpdateRequest {\n    storage_slot: Field,\n    old_value: Field,\n    new_value: Field,\n}\n\nimpl ContractStorageUpdateRequest {\n    pub fn serialize(self) -> [Field; CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH] {\n        [self.storage_slot, self.old_value, self.new_value]\n    }\n\n    pub fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST)\n    }\n\n    pub fn empty() -> Self {\n        Self { storage_slot: 0, old_value: 0, new_value: 0 }\n    }\n}\n\n\nstruct PublicCircuitPublicInputs {\n    call_context: CallContext,\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n    contract_storage_update_requests: [ContractStorageUpdateRequest; MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n    contract_storage_read: [ContractStorageRead; MAX_PUBLIC_DATA_READS_PER_CALL],\n    public_call_stack: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_commitments: [Field; MAX_NEW_COMMITMENTS_PER_CALL],\n    new_nullifiers: [Field; crate::abi::MAX_NEW_NULLIFIERS_PER_CALL],\n    new_l2_to_l1_msgs: [Field; crate::abi::MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n    unencrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    unencrypted_log_preimages_length: Field,\n    block_data: HistoricBlockData,\n    prover_address: Field,\n}\n\nimpl PublicCircuitPublicInputs {\n    \n    pub fn hash(self) -> Field {\n        let mut inputs: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH> = BoundedVec::new(0);\n        inputs.push(self.call_context.hash());\n        inputs.push(self.args_hash);\n        inputs.push_array(self.return_values);\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            inputs.push(self.contract_storage_update_requests[i].hash());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            inputs.push(self.contract_storage_read[i].hash());\n        }\n        inputs.push_array(self.public_call_stack);\n        inputs.push_array(self.new_commitments);\n        inputs.push_array(self.new_nullifiers);\n        inputs.push_array(self.new_l2_to_l1_msgs);\n\n        inputs.push_array(self.unencrypted_logs_hash);\n        inputs.push(self.unencrypted_log_preimages_length);\n        inputs.push_array(self.block_data.serialize());\n        inputs.push(self.prover_address);\n\n        pedersen_hash(inputs.storage, GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS)\n    }\n\n    pub fn serialize(self) -> [Field; PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new(0); \n        fields.push_array(self.call_context.serialize());   \n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            fields.push_array(self.contract_storage_update_requests[i].serialize());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            fields.push_array(self.contract_storage_read[i].serialize());\n        }\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_data.serialize());\n        fields.push(self.prover_address);\n        fields.storage\n    }\n}\n\nstruct Hasher {\n    fields: [Field],\n}\n\nimpl Hasher {\n    pub fn new()-> Self {\n        Self { fields: [] }\n    }\n\n    pub fn add(&mut self, field: Field) {\n        self.fields = self.fields.push_back(field);\n    }\n\n    pub fn add_multiple<N>(&mut self, fields: [Field; N]) {\n        for i in 0..N {\n            self.fields = self.fields.push_back(fields[i]);\n        }\n    }\n\n    pub fn hash(self) -> Field {\n        hash_args(self.fields)\n    }\n}\n\nglobal ARGS_HASH_CHUNK_LENGTH: u32 = 32;\nglobal ARGS_HASH_CHUNK_COUNT: u32 = 16;\n\npub fn hash_args<N>(args: [Field; N]) -> Field {\n    if args.len() == 0 {\n        0\n    } else {\n        let mut chunks_hashes = [0; ARGS_HASH_CHUNK_COUNT];\n        for i in 0..ARGS_HASH_CHUNK_COUNT {\n            let mut chunk_hash = 0;\n            let start_chunk_index = i * ARGS_HASH_CHUNK_LENGTH;\n            if start_chunk_index < (args.len() as u32) {\n                let mut chunk_args = [0; ARGS_HASH_CHUNK_LENGTH];\n                for j in 0..ARGS_HASH_CHUNK_LENGTH {\n                    let item_index = i * ARGS_HASH_CHUNK_LENGTH + j;\n                    if item_index < (args.len() as u32) {\n                        chunk_args[j] = args[item_index];\n                    }\n                }\n                chunk_hash = pedersen_hash(chunk_args, GENERATOR_INDEX__FUNCTION_ARGS);\n            }\n            chunks_hashes[i] = chunk_hash;\n        }\n        pedersen_hash(chunks_hashes, GENERATOR_INDEX__FUNCTION_ARGS)\n    }\n}\n",
        "path": "/aztec/abi.nr"
      },
      "37": {
        "source": "use crate::constants_gen::GENERATOR_INDEX__CONTRACT_ADDRESS;\nuse crate::hash::pedersen_hash;\n\npub fn compute_address(pub_key_x: Field, pub_key_y: Field, partial_address: Field) -> Field {\n  pedersen_hash([pub_key_x, pub_key_y, partial_address], GENERATOR_INDEX__CONTRACT_ADDRESS)\n}",
        "path": "/aztec/address.nr"
      },
      "39": {
        "source": "use crate::constants_gen::{\n    EMPTY_NULLIFIED_COMMITMENT,\n    MAX_NEW_COMMITMENTS_PER_CALL,\n    MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n    MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_DATA_READS_PER_CALL,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n    MAX_READ_REQUESTS_PER_CALL,\n    MAX_PENDING_READ_REQUESTS_PER_CALL,\n    NUM_FIELDS_PER_SHA256,\n    RETURN_VALUES_LENGTH,\n};\n\nuse crate::abi;\n\nuse crate::abi::{\n    hash_args,\n    CallContext,\n    ContractDeploymentData,\n    HistoricBlockData,\n    FunctionData,\n    PrivateCircuitPublicInputs,\n    PublicCircuitPublicInputs,\n};\n\n// TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n// use dep::std::collections::vec::Vec;\n\n// l1 to l2 messaging\nuse crate::messaging::process_l1_to_l2_message;\nuse crate::private_call_stack_item::PrivateCallStackItem;\nuse crate::public_call_stack_item::PublicCallStackItem;\n\nuse crate::types::{\n    vec::BoundedVec,\n    point::Point,\n};\n\nuse crate::utils::arr_copy_slice;\n\nuse crate::oracle::{\n    arguments,\n    call_private_function::call_private_function_internal,\n    public_call::call_public_function_internal,\n    enqueue_public_function_call::enqueue_public_function_call_internal,\n    context::get_portal_address,\n};\n\nuse dep::std::option::Option;\n\n// When finished, one can call .finish() to convert back to the abi\nstruct PrivateContext {\n    // docs:start:private-context\n    inputs: abi::PrivateContextInputs,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    read_requests: BoundedVec<Field, MAX_READ_REQUESTS_PER_CALL>,\n    pending_read_requests: BoundedVec<Field, MAX_PENDING_READ_REQUESTS_PER_CALL>,\n\n    new_commitments: BoundedVec<Field, MAX_NEW_COMMITMENTS_PER_CALL>,\n    new_nullifiers: BoundedVec<Field, MAX_NEW_NULLIFIERS_PER_CALL>,\n    nullified_commitments: BoundedVec<Field, MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    private_call_stack : BoundedVec<Field, MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL>,\n    public_call_stack : BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n    new_l2_to_l1_msgs : BoundedVec<Field, MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n    // docs:end:private-context\n\n    block_data: HistoricBlockData,\n\n    // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    // encrypted_logs_preimages: Vec<Field>,\n    // unencrypted_logs_preimages: Vec<Field>,\n}\n\nimpl PrivateContext {\n    pub fn new(inputs: abi::PrivateContextInputs, args_hash: Field) -> PrivateContext {\n        PrivateContext {\n            inputs: inputs,\n\n            args_hash: args_hash,\n            return_values: BoundedVec::new(0),\n\n            read_requests: BoundedVec::new(0),\n            pending_read_requests: BoundedVec::new(0),\n\n            new_commitments: BoundedVec::new(0),\n            new_nullifiers: BoundedVec::new(0),\n            nullified_commitments: BoundedVec::new(0),\n\n            block_data: inputs.block_data,\n\n            private_call_stack: BoundedVec::new(0),\n            public_call_stack: BoundedVec::new(0),\n            new_l2_to_l1_msgs: BoundedVec::new(0),\n\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    pub fn msg_sender(self) -> Field {\n        self.inputs.call_context.msg_sender\n    }\n\n    pub fn this_address(self) -> Field {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    pub fn this_portal_address(self) -> Field {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    pub fn chain_id(self) -> Field {\n        self.inputs.private_global_variables.chain_id\n    }\n\n    pub fn version(self) -> Field {\n        self.inputs.private_global_variables.version\n    }\n\n    pub fn selector(self) -> Field {\n        self.inputs.call_context.function_selector\n    }\n\n    pub fn finish(self) -> abi::PrivateCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let encrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let encrypted_log_preimages_length = 0;\n        let unencrypted_log_preimages_length = 0;\n\n        let priv_circuit_pub_inputs = abi::PrivateCircuitPublicInputs {\n            call_context: self.inputs.call_context,\n            args_hash: self.args_hash,\n            return_values: self.return_values.storage,\n            read_requests: self.read_requests.storage,\n            pending_read_requests: self.pending_read_requests.storage,\n            new_commitments: self.new_commitments.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            nullified_commitments: self.nullified_commitments.storage,\n            private_call_stack: self.private_call_stack.storage,\n            public_call_stack: self.public_call_stack.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            encrypted_logs_hash: encrypted_logs_hash,\n            unencrypted_logs_hash: unencrypted_logs_hash,\n            encrypted_log_preimages_length: encrypted_log_preimages_length,\n            unencrypted_log_preimages_length: unencrypted_log_preimages_length,\n            block_data: self.block_data,\n            contract_deployment_data: self.inputs.contract_deployment_data,\n            chain_id: self.inputs.private_global_variables.chain_id,\n            version: self.inputs.private_global_variables.version,\n        };\n        priv_circuit_pub_inputs\n    }\n\n    pub fn push_read_request(&mut self, read_request: Field) {\n        self.read_requests.push(read_request);\n    }\n\n    pub fn push_pending_read_request(&mut self, pending_read_request: Field) {\n        self.pending_read_requests.push(pending_read_request);\n    }\n\n    pub fn push_new_note_hash(&mut self, note_hash: Field) {\n        self.new_commitments.push(note_hash);\n    }\n\n    // We never push a zero nullified_commitment as zero is used to indicate the end\n    // of a field array in private kernel. This routine transparently replaces a\n    // zero value into the special placeholder: EMPTY_NULLIFIED_COMMITMENT.\n    pub fn push_new_nullifier(&mut self, nullifier: Field, nullified_commitment: Field) {\n        self.new_nullifiers.push(nullifier);\n        let mut non_zero_nullified = nullified_commitment;\n        if (non_zero_nullified == 0) {\n            non_zero_nullified = EMPTY_NULLIFIED_COMMITMENT;\n        }\n        self.nullified_commitments.push(non_zero_nullified);\n    }\n\n    // docs:start:context_message_portal\n    pub fn message_portal(&mut self, content: Field) \n    // docs:end:context_message_portal\n    {\n        self.new_l2_to_l1_msgs.push(content);\n    }\n\n    // PrivateContextInputs must be temporarily passed in to prevent too many unknowns\n    // Note this returns self to get around an issue where mutable structs do not maintain mutations unless reassigned\n    // docs:start:context_consume_l1_to_l2_message\n    // docs:start:consume_l1_to_l2_message\n    pub fn consume_l1_to_l2_message(\n        &mut self,\n        msg_key: Field,\n        content: Field,\n        secret: Field\n    ) \n    // docs:end:context_consume_l1_to_l2_message\n    {\n        let nullifier = process_l1_to_l2_message(self.block_data.l1_to_l2_messages_tree_root, self.this_address(), msg_key, content, secret);\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT)\n    }\n    // docs:end:consume_l1_to_l2_message\n\n    pub fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn call_private_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n        args: [Field; ARGS_COUNT]\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash)\n    }\n\n    pub fn call_private_function_no_args(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0)\n    }\n\n    pub fn call_private_function_with_packed_args(\n        &mut self,\n        contract_address: Field,\n        function_selector: Field,\n        args_hash: Field\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let fields = call_private_function_internal(\n            contract_address, \n            function_selector, \n            args_hash\n        );\n        let item = PrivateCallStackItem {\n            contract_address: fields[0],\n            function_data: FunctionData {\n                function_selector: fields[1],\n                is_internal: fields[2] as bool,\n                is_private: fields[3] as bool,\n                is_constructor: fields[4] as bool,\n            },\n            public_inputs: PrivateCircuitPublicInputs {\n                call_context: CallContext {\n                    msg_sender : fields[5],\n                    storage_contract_address : fields[6],\n                    portal_contract_address : fields[7],\n                    function_selector: fields[8], // practically same as fields[1]\n                    is_delegate_call : fields[9] as bool,\n                    is_static_call : fields[10] as bool,\n                    is_contract_deployment: fields[11] as bool,\n                },\n                // TODO handle the offsets as a variable incremented during extraction?\n                args_hash: fields[12],\n                return_values: arr_copy_slice(fields, [0; RETURN_VALUES_LENGTH], 13),\n                read_requests: arr_copy_slice(fields, [0; MAX_READ_REQUESTS_PER_CALL], 17),\n                pending_read_requests: arr_copy_slice(fields, [0; MAX_READ_REQUESTS_PER_CALL], 49),\n                new_commitments: arr_copy_slice(fields, [0; MAX_NEW_COMMITMENTS_PER_CALL], 81),\n                new_nullifiers: arr_copy_slice(fields, [0; MAX_NEW_NULLIFIERS_PER_CALL], 97),\n                nullified_commitments: arr_copy_slice(fields, [0; MAX_NEW_NULLIFIERS_PER_CALL], 113),\n                private_call_stack: arr_copy_slice(fields, [0; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL], 129),\n                public_call_stack: arr_copy_slice(fields, [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL], 133),\n                new_l2_to_l1_msgs: arr_copy_slice(fields, [0; MAX_NEW_L2_TO_L1_MSGS_PER_CALL], 137),\n                encrypted_logs_hash: arr_copy_slice(fields, [0; NUM_FIELDS_PER_SHA256], 139),\n                unencrypted_logs_hash: arr_copy_slice(fields, [0; NUM_FIELDS_PER_SHA256], 141),\n                encrypted_log_preimages_length: fields[143],\n                unencrypted_log_preimages_length: fields[144],\n                block_data: HistoricBlockData {\n                    // Must match order in `private_circuit_public_inputs.hpp`\n                    note_hash_tree_root : fields[145],\n                    nullifier_tree_root : fields[146],\n                    contract_tree_root : fields[147],\n                    l1_to_l2_messages_tree_root : fields[148],\n                    blocks_tree_root : fields[149],\n                    public_data_tree_root: fields[150],\n                    global_variables_hash: fields[151],\n                },\n                contract_deployment_data: ContractDeploymentData {\n                    deployer_public_key: Point::new(fields[152], fields[153]),\n                    constructor_vk_hash : fields[154],\n                    function_tree_root : fields[155],\n                    contract_address_salt : fields[156],\n                    portal_contract_address : fields[157],\n                },\n                chain_id: fields[158],\n                version: fields[159],\n            },\n            is_execution_request: fields[160] as bool,\n        };\n        assert(contract_address == item.contract_address);\n        assert(function_selector == item.function_data.function_selector);\n\n        assert(args_hash == item.public_inputs.args_hash);\n\n        assert(item.is_execution_request == false);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        // We are issuing a regular call which is not delegate, static, or deployment. We also constrain\n        // the msg_sender in the nested call to be equal to our address, and the execution context address\n        // for the nested call to be equal to the address we actually called.\n        assert(item.public_inputs.call_context.is_delegate_call == false);\n        assert(item.public_inputs.call_context.is_static_call == false);\n        assert(item.public_inputs.call_context.is_contract_deployment == false);\n        assert(item.public_inputs.call_context.msg_sender == self.inputs.call_context.storage_contract_address);\n        assert(item.public_inputs.call_context.storage_contract_address == contract_address);\n\n        self.private_call_stack.push(item.hash());\n\n        item.public_inputs.return_values\n    }\n\n    pub fn call_public_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash)\n    }\n\n    pub fn call_public_function_no_args(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field,\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0)\n    }\n\n    pub fn call_public_function_with_packed_args(\n        &mut self,\n        contract_address: Field,\n        function_selector: Field,\n        args_hash: Field\n    ) {\n        let fields = enqueue_public_function_call_internal(\n            contract_address, \n            function_selector, \n            args_hash\n        );\n        let item = PublicCallStackItem {\n            contract_address: fields[0],\n            function_data: FunctionData {\n                function_selector: fields[1],\n                is_internal: fields[2] as bool,\n                is_private: fields[3] as bool,\n                is_constructor: fields[4] as bool,\n            },\n            public_inputs: PublicCircuitPublicInputs {\n                call_context: CallContext {\n                    msg_sender : fields[5],\n                    storage_contract_address : fields[6],\n                    portal_contract_address : fields[7],\n                    function_selector: fields[8], // practically same as fields[1]\n                    is_delegate_call : fields[9] as bool,\n                    is_static_call : fields[10] as bool,\n                    is_contract_deployment: fields[11] as bool,\n                },\n                args_hash: fields[12],\n                return_values: [0; RETURN_VALUES_LENGTH],\n                contract_storage_update_requests: [ContractStorageUpdateRequest::empty(); MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n                contract_storage_read: [ContractStorageRead::empty(); MAX_PUBLIC_DATA_READS_PER_CALL],\n                public_call_stack: [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n                new_commitments: [0; MAX_NEW_COMMITMENTS_PER_CALL],\n                new_nullifiers: [0; MAX_NEW_NULLIFIERS_PER_CALL],\n                new_l2_to_l1_msgs:[0; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n                unencrypted_logs_hash:[0; NUM_FIELDS_PER_SHA256],\n                unencrypted_log_preimages_length: 0,\n                block_data: HistoricBlockData::empty(),\n                prover_address: 0,\n            },\n            is_execution_request: true,\n        };\n\n        assert(contract_address == item.contract_address);\n        assert(function_selector == item.function_data.function_selector);\n        \n        assert(args_hash == item.public_inputs.args_hash);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        // We are issuing a regular call which is not delegate, static, or deployment. We also constrain\n        // the msg_sender in the nested call to be equal to our address, and the execution context address\n        // for the nested call to be equal to the address we actually called.\n        assert(item.public_inputs.call_context.is_delegate_call == false);\n        assert(item.public_inputs.call_context.is_static_call == false);\n        assert(item.public_inputs.call_context.is_contract_deployment == false);\n        assert(item.public_inputs.call_context.msg_sender == self.inputs.call_context.storage_contract_address);\n        assert(item.public_inputs.call_context.storage_contract_address == contract_address);\n\n        self.public_call_stack.push(item.hash());\n    }\n}\n\nuse crate::abi::{\n    ContractStorageRead,\n    ContractStorageUpdateRequest\n};\n\nstruct PublicContext {\n    inputs: abi::PublicContextInputs,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    contract_storage_update_requests: BoundedVec<ContractStorageUpdateRequest, MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL>,\n    contract_storage_read: BoundedVec<ContractStorageRead, MAX_PUBLIC_DATA_READS_PER_CALL>,\n    public_call_stack: BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n\n    new_commitments: BoundedVec<Field, MAX_NEW_COMMITMENTS_PER_CALL>,\n    new_nullifiers: BoundedVec<Field, crate::abi::MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    new_l2_to_l1_msgs: BoundedVec<Field, crate::abi::MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n\n    unencrypted_logs_hash: BoundedVec<Field, NUM_FIELDS_PER_SHA256>,\n    unencrypted_logs_preimages_length: Field,\n\n    block_data: HistoricBlockData,\n    prover_address: Field,\n}\n\nimpl PublicContext {\n    pub fn new(inputs: abi::PublicContextInputs, args_hash: Field) -> PublicContext {\n        let empty_storage_read = ContractStorageRead::empty();\n        let empty_storage_update = ContractStorageUpdateRequest::empty();\n        PublicContext {\n            inputs: inputs,\n\n            args_hash: args_hash,\n            return_values: BoundedVec::new(0),\n\n            contract_storage_update_requests: BoundedVec::new(empty_storage_update),\n            contract_storage_read: BoundedVec::new(empty_storage_read),\n            public_call_stack: BoundedVec::new(0),\n\n            new_commitments: BoundedVec::new(0),\n            new_nullifiers: BoundedVec::new(0),\n\n            new_l2_to_l1_msgs: BoundedVec::new(0),\n\n            \n            unencrypted_logs_hash: BoundedVec::new(0),\n            unencrypted_logs_preimages_length: 0,\n\n            block_data: inputs.block_data,\n            prover_address: 0,\n\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    pub fn msg_sender(self) -> Field {\n        self.inputs.call_context.msg_sender\n    }\n\n    pub fn this_address(self) -> Field {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    pub fn this_portal_address(self) -> Field {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    pub fn chain_id(self) -> Field {\n        self.inputs.public_global_variables.chain_id\n    }\n\n    pub fn version(self) -> Field {\n        self.inputs.public_global_variables.version\n    }\n\n    pub fn selector(self) -> Field {\n        self.inputs.call_context.function_selector\n    }\n\n    pub fn block_number(self) -> Field {\n        self.inputs.public_global_variables.block_number\n    }\n\n    pub fn timestamp(self) -> Field {\n        self.inputs.public_global_variables.timestamp\n    }\n\n    pub fn finish(self) -> abi::PublicCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_log_preimages_length = 0;\n\n\n        // Compute the public call stack hashes\n        let pub_circuit_pub_inputs = abi::PublicCircuitPublicInputs {\n            call_context: self.inputs.call_context, // Done\n            args_hash: self.args_hash, // Done\n            contract_storage_update_requests: self.contract_storage_update_requests.storage,\n            contract_storage_read: self.contract_storage_read.storage,\n            return_values: self.return_values.storage,\n            new_commitments: self.new_commitments.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            public_call_stack: self.public_call_stack.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            unencrypted_logs_hash: unencrypted_logs_hash,\n            unencrypted_log_preimages_length: unencrypted_log_preimages_length,\n            block_data: self.inputs.block_data,\n            prover_address: self.prover_address,\n        };\n        pub_circuit_pub_inputs\n    }\n\n    pub fn push_new_note_hash(&mut self, note_hash: Field) {\n        self.new_commitments.push(note_hash);\n    }\n\n    pub fn push_new_nullifier(&mut self, nullifier: Field, _nullified_commitment: Field) {\n        self.new_nullifiers.push(nullifier);\n    }\n\n    pub fn message_portal(&mut self, content: Field) {\n        self.new_l2_to_l1_msgs.push(content);\n    }\n\n    // PrivateContextInputs must be temporarily passed in to prevent too many unknowns\n    // Note this returns self to get around an issue where mutable structs do not maintain mutations unless reassigned\n    pub fn consume_l1_to_l2_message(&mut self, msg_key: Field, content: Field, secret: Field) {\n        let this = (*self).this_address();\n        let nullifier = process_l1_to_l2_message(self.block_data.l1_to_l2_messages_tree_root, this, msg_key, content, secret);\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT)\n    }\n\n    pub fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn call_public_function<ARGS_COUNT>(\n        _self: Self,\n        contract_address: Field, \n        function_selector: Field,\n        args: [Field; ARGS_COUNT],\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = abi::hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        call_public_function_internal(\n            contract_address, \n            function_selector, \n            args_hash,\n        )\n    }\n\n    pub fn call_public_function_no_args(\n        _self: Self,\n        contract_address: Field, \n        function_selector: Field,\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        call_public_function_internal(\n            contract_address, \n            function_selector, \n            0,\n        )\n    }\n\n}\n\nstruct Context {\n    private: Option<&mut PrivateContext>,\n    public: Option<&mut PublicContext>,\n}\n\nimpl Context {\n    pub fn private(context: &mut PrivateContext) -> Context {\n        Context {\n            private: Option::some(context),\n            public: Option::none()\n        }\n    }\n\n    pub fn public(context: &mut PublicContext) -> Context {\n        Context {\n            public: Option::some(context),\n            private: Option::none()\n        }\n    }\n\n    pub fn none() -> Context {\n        Context {\n            public: Option::none(),\n            private: Option::none()\n        }\n    }\n}",
        "path": "/aztec/context.nr"
      },
      "40": {
        "source": "use dep::std::hash::{pedersen_hash_with_separator, sha256};\nuse crate::constants_gen::{\n  GENERATOR_INDEX__SIGNATURE_PAYLOAD,\n  GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET,\n};\n\npub fn sha256_to_field<N>(bytes_to_hash: [u8; N]) -> Field {\n  let sha256_hashed = sha256(bytes_to_hash);\n\n  // Convert it to a field element\n  let mut v = 1;\n  let mut high = 0 as Field;\n  let mut low = 0 as Field;\n\n  for i in 0..16 {\n      high = high + (sha256_hashed[15 - i] as Field) * v;\n      low = low + (sha256_hashed[16 + 15 - i] as Field) * v;\n      v = v * 256;\n  }\n\n  // Abuse that a % p + b % p = (a + b) % p and that low < p\n  let hash_in_a_field = low + high * v;\n\n  hash_in_a_field\n}\n\npub fn compute_secret_hash(secret: Field) -> Field {\n  // TODO(#1205) This is probably not the right index to use\n  pedersen_hash([secret], GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET)\n}\n\npub fn pedersen_hash<N>(inputs: [Field; N], hash_index: u32) -> Field {\n  pedersen_hash_with_separator(inputs, hash_index)\n}",
        "path": "/aztec/hash.nr"
      },
      "41": {
        "source": "use crate::context::{PrivateContext, PublicContext};\nuse crate::oracle;\nuse crate::types::point::Point;\n\npub fn emit_encrypted_log<N>(\n    context: &mut PrivateContext,\n    contract_address: Field,\n    storage_slot: Field,\n    encryption_pub_key: Point,\n    log: [Field; N],\n) {\n    let _ = oracle::logs::emit_encrypted_log(contract_address, storage_slot, encryption_pub_key, log);\n    context.accumulate_encrypted_logs(log);\n}\n\npub fn emit_unencrypted_log<T>(\n    context: &mut PublicContext,\n    log: T,\n) {\n    let contract_address = context.this_address();\n    let event_selector = 5; // TODO: compute actual event selector.\n    let _ = oracle::logs::emit_unencrypted_log(contract_address, event_selector, log);\n    // context.accumulate_unencrypted_logs(log);\n}\n\n// TODO: We might want to remove this since emitting unencrypted logs from private functions is violating privacy.\n// --> might be a better approach to force devs to make a public function call that emits the log if needed then\n// it would be less easy to accidentally leak information.\n// If we decide to keep this function around would make sense to wait for traits and then merge it with emit_unencrypted_log.\npub fn emit_unencrypted_log_from_private<T>(\n    context: &mut PrivateContext,\n    log: T,\n) {\n    let contract_address = context.this_address();\n    let event_selector = 5; // TODO: compute actual event selector.\n    let _ = oracle::logs::emit_unencrypted_log(contract_address, event_selector, log);\n    // context.accumulate_unencrypted_logs(log);\n}\n",
        "path": "/aztec/log.nr"
      },
      "46": {
        "source": "use crate::abi::PublicContextInputs;\nuse crate::context::{\n    PrivateContext,\n    PublicContext,\n};\nuse crate::note::{\n    note_header::NoteHeader,\n    note_interface::NoteInterface,\n    utils::compute_inner_note_hash,\n};\nuse crate::oracle::notes::{notify_created_note, notify_nullified_note};\nuse crate::constants_gen::EMPTY_NULLIFIED_COMMITMENT;\n\npub fn create_note<Note, N>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    note: &mut Note,\n    note_interface: NoteInterface<Note, N>,\n    broadcast: bool,\n) {\n    let contract_address = (*context).this_address();\n\n    let header = NoteHeader { contract_address, storage_slot, nonce: 0, is_transient: true };\n    let set_header = note_interface.set_header;\n    set_header(note, header);\n    let inner_note_hash = compute_inner_note_hash(note_interface, *note);\n\n    let serialize = note_interface.serialize;\n    let serialized_note = serialize(*note);\n    assert(notify_created_note(storage_slot, serialized_note, inner_note_hash) == 0);\n\n    context.push_new_note_hash(inner_note_hash);\n\n    if broadcast {\n        let broadcast = note_interface.broadcast;\n        broadcast(context, storage_slot, *note);\n    }\n}\n\npub fn create_note_hash_from_public<Note, N>(\n    context: &mut PublicContext,\n    storage_slot: Field,\n    note: &mut Note,\n    note_interface: NoteInterface<Note, N>,\n) {\n    let contract_address = (*context).this_address();\n\n    let header = NoteHeader { contract_address, storage_slot, nonce: 0, is_transient: true };\n    let set_header = note_interface.set_header;\n    set_header(note, header);\n    let inner_note_hash = compute_inner_note_hash(note_interface, *note);\n\n    context.push_new_note_hash(inner_note_hash);\n}\n\npub fn destroy_note<Note, N>(\n    context: &mut PrivateContext,\n    note: Note,\n    note_interface: NoteInterface<Note, N>,\n) {\n    let mut nullifier = 0;\n    let mut nullified_commitment: Field = EMPTY_NULLIFIED_COMMITMENT;\n    let compute_nullifier = note_interface.compute_nullifier;\n    nullifier = compute_nullifier(note);\n\n    // We also need the note commitment corresponding to the \"nullifier\"\n    let get_header = note_interface.get_header;\n    let header = get_header(note);\n    // `nullified_commitment` is used to inform the kernel which pending commitment\n    // the nullifier corresponds to so they can be matched and both squashed/deleted.\n    // nonzero nonce implies \"persistable\" nullifier (nullifies a persistent/in-tree\n    // commitment) in which case `nullified_commitment` is not used since the kernel\n    // just siloes and forwards the nullifier to its output.\n    if (header.is_transient) {\n        // TODO(1718): Can we reuse the note commitment computed in `compute_nullifier`?\n        nullified_commitment = compute_inner_note_hash(note_interface, note);\n    }\n    assert(notify_nullified_note(nullifier, nullified_commitment) == 0);\n\n    context.push_new_nullifier(nullifier, nullified_commitment)\n}",
        "path": "/aztec/note/lifecycle.nr"
      },
      "47": {
        "source": "use dep::std::option::Option;\nuse crate::constants_gen::{\n    MAX_READ_REQUESTS_PER_CALL,\n    GET_NOTE_ORACLE_RETURN_LENGTH,\n    GET_NOTES_ORACLE_RETURN_LENGTH,\n    MAX_NOTES_PER_PAGE,\n    VIEW_NOTE_ORACLE_RETURN_LENGTH,\n};\nuse crate::context::PrivateContext;\nuse crate::note::{\n    note_getter_options::{NoteGetterOptions, Select, Sort, SortOrder},\n    note_interface::NoteInterface,\n    note_viewer_options::NoteViewerOptions,\n    utils::compute_note_hash_for_read_or_nullify,\n};\nuse crate::oracle;\nuse crate::types::vec::BoundedVec;\n\nfn check_note_header<Note, N>(\n    context: PrivateContext,\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    note: Note,\n) {\n    let get_header = note_interface.get_header;\n    let header = get_header(note);\n    let contract_address = context.this_address();\n    assert(header.contract_address == contract_address);\n    assert(header.storage_slot == storage_slot);\n}\n\nfn check_note_fields<N>(\n    fields: [Field; N],\n    selects: BoundedVec<Option<Select>, N>,\n) {\n    for i in 0..selects.len {\n        let select = selects.get_unchecked(i).unwrap_unchecked();\n        assert(fields[select.field_index] == select.value, \"Mismatch return note field.\");\n    }\n}\n\nfn check_notes_order<N>(fields_0: [Field; N], fields_1: [Field; N], sorts: BoundedVec<Option<Sort>, N>) {\n    for i in 0..sorts.len {\n        let sort = sorts.get_unchecked(i).unwrap_unchecked();\n        let eq = fields_0[sort.field_index] == fields_1[sort.field_index];\n        let lt = fields_0[sort.field_index] as u120 < fields_1[sort.field_index] as u120;\n        if sort.order == SortOrder.ASC {\n            assert(eq | lt, \"Return notes not sorted in ascending order.\");\n        } else if !eq {\n            assert(!lt, \"Return notes not sorted in descending order.\");\n        }\n    }\n}\n\npub fn get_note<Note, N>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n) -> Note {\n    let note = get_note_internal(storage_slot, note_interface);\n\n    check_note_header(*context, storage_slot, note_interface, note);\n\n    let note_hash_for_read_request = compute_note_hash_for_read_or_nullify(note_interface, note);\n\n    context.push_read_request(note_hash_for_read_request);\n    note\n}\n\npub fn get_notes<Note, N, FILTER_ARGS>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    options: NoteGetterOptions<Note, N, FILTER_ARGS>,\n) -> [Option<Note>; MAX_READ_REQUESTS_PER_CALL] {\n    let opt_notes = get_notes_internal(storage_slot, note_interface, options);\n    let mut num_notes = 0;\n    let mut prev_fields = [0; N];\n    for i in 0..opt_notes.len() {\n        let opt_note = opt_notes[i];\n        if opt_note.is_some() {\n            let note = opt_note.unwrap_unchecked();\n            let serialize = note_interface.serialize;\n            let fields = serialize(note);\n            check_note_header(*context, storage_slot, note_interface, note);\n            check_note_fields(fields, options.selects);\n            if i != 0 {\n                check_notes_order(prev_fields, fields, options.sorts);\n            }\n            prev_fields = fields;\n\n            let note_hash_for_read_request = compute_note_hash_for_read_or_nullify(note_interface, note);\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1410): test to ensure\n            // failure if malicious oracle injects 0 nonce here for a \"pre-existing\" note.\n            context.push_read_request(note_hash_for_read_request);\n\n            num_notes += 1;\n        };\n    };\n    if options.limit != 0 {\n        assert(num_notes <= options.limit, \"Invalid number of return notes.\");\n    }\n    opt_notes\n}\n\nunconstrained fn get_note_internal<Note, N>(\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n) -> Note {\n    let placeholder_note = [Option::none()];\n    let placeholder_fields = [0; GET_NOTE_ORACLE_RETURN_LENGTH];\n    oracle::notes::get_notes(\n        storage_slot,\n        note_interface,\n        0,\n        [],\n        [],\n        [],\n        [],\n        1, // limit\n        0, // offset\n        placeholder_note,\n        placeholder_fields,\n    )[0].unwrap() // Notice: we don't allow dummies to be returned from get_note (singular).\n}\n\nunconstrained fn get_notes_internal<Note, N, FILTER_ARGS>(\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    options: NoteGetterOptions<Note, N, FILTER_ARGS>,\n) -> [Option<Note>; MAX_READ_REQUESTS_PER_CALL] {\n    let (num_selects, select_by, select_values, sort_by, sort_order) = flatten_options(options.selects, options.sorts);\n    let placeholder_opt_notes = [Option::none(); MAX_READ_REQUESTS_PER_CALL];\n    let placeholder_fields = [0; GET_NOTES_ORACLE_RETURN_LENGTH];\n    let opt_notes = oracle::notes::get_notes(\n        storage_slot,\n        note_interface,\n        num_selects,\n        select_by,\n        select_values,\n        sort_by,\n        sort_order,\n        options.limit,\n        options.offset,\n        placeholder_opt_notes,\n        placeholder_fields,\n    );\n\n    let filter = options.filter;\n    let filter_args = options.filter_args;\n    filter(opt_notes, filter_args)\n}\n\nunconstrained pub fn view_notes<Note, N>(\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    options: NoteViewerOptions<Note, N>,\n) -> [Option<Note>; MAX_NOTES_PER_PAGE] {\n    let (num_selects, select_by, select_values, sort_by, sort_order) = flatten_options(options.selects, options.sorts);\n    let placeholder_opt_notes = [Option::none(); MAX_NOTES_PER_PAGE];\n    let placeholder_fields = [0; VIEW_NOTE_ORACLE_RETURN_LENGTH];\n    oracle::notes::get_notes(\n        storage_slot,\n        note_interface,\n        num_selects,\n        select_by,\n        select_values,\n        sort_by,\n        sort_order,\n        options.limit,\n        options.offset,\n        placeholder_opt_notes,\n        placeholder_fields,\n    )\n}\n\nunconstrained fn flatten_options<Note, N>(\n    selects: BoundedVec<Option<Select>, N>,\n    sorts: BoundedVec<Option<Sort>, N>,\n) -> (u8, [u8; N], [Field; N], [u8; N], [u2; N]) {\n    let mut num_selects = 0;\n    let mut select_by = [0; N];\n    let mut select_values = [0; N];\n    for i in 0..selects.len {\n        let select = selects.get(i);\n        if select.is_some() {\n            select_by[num_selects] = select.unwrap_unchecked().field_index;\n            select_values[num_selects] = select.unwrap_unchecked().value;\n            num_selects += 1;\n        };\n    };\n\n    let mut sort_by = [0; N];\n    let mut sort_order = [0; N];\n    for i in 0..sorts.len {\n        let sort = sorts.get(i);\n        if sort.is_some() {\n            sort_by[i] = sort.unwrap_unchecked().field_index;\n            sort_order[i] = sort.unwrap_unchecked().order;\n        };\n    };\n\n    (num_selects, select_by, select_values, sort_by, sort_order)\n}",
        "path": "/aztec/note/note_getter.nr"
      },
      "49": {
        "source": "use crate::hash::pedersen_hash;\nuse crate::constants_gen::{GENERATOR_INDEX__UNIQUE_COMMITMENT, GENERATOR_INDEX__SILOED_COMMITMENT};\n\npub fn compute_inner_hash(storage_slot: Field, note_hash: Field) -> Field {\n    // TODO(#1205) Do we need a generator index here?\n    pedersen_hash([storage_slot, note_hash], 0)\n}\n\npub fn compute_siloed_hash(contract_address: Field, inner_note_hash: Field) -> Field {\n    let inputs = [contract_address, inner_note_hash];\n    pedersen_hash(inputs, GENERATOR_INDEX__SILOED_COMMITMENT)\n}\n\npub fn compute_unique_hash(nonce: Field, siloed_note_hash: Field) -> Field {\n    let inputs = [nonce, siloed_note_hash];\n    pedersen_hash(inputs, GENERATOR_INDEX__UNIQUE_COMMITMENT)\n}\n",
        "path": "/aztec/note/note_hash.nr"
      },
      "53": {
        "source": "use crate::note::{\n    note_hash::{compute_inner_hash, compute_siloed_hash, compute_unique_hash},\n    note_header::NoteHeader,\n    note_interface::NoteInterface,\n};\nuse crate::utils::arr_copy_slice;\n\npub fn compute_inner_note_hash<Note, N>(\n    note_interface: NoteInterface<Note, N>,\n    note: Note,\n) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note);\n\n    let compute_note_hash = note_interface.compute_note_hash;\n    let note_hash = compute_note_hash(note);\n\n    compute_inner_hash(header.storage_slot, note_hash)\n}\n\npub fn compute_siloed_note_hash<Note, N>(\n    note_interface: NoteInterface<Note, N>,\n    note_with_header: Note,\n) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note_with_header);\n\n    let inner_note_hash = compute_inner_note_hash(note_interface, note_with_header);\n\n    compute_siloed_hash(header.contract_address, inner_note_hash)\n}\n\npub fn compute_unique_siloed_note_hash<Note, N>(\n    note_interface: NoteInterface<Note, N>,\n    note_with_header: Note,\n) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note_with_header);\n\n    let siloed_note_hash = compute_siloed_note_hash(note_interface, note_with_header);\n\n    compute_unique_hash(header.nonce, siloed_note_hash)\n}\n\npub fn compute_note_hash_for_read_or_nullify<Note, N>(\n    note_interface: NoteInterface<Note, N>,\n    note_with_header: Note,\n) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note_with_header);\n\n    // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1386)\n    if (header.is_transient) {\n        // If a note is transient, we just read the inner_note_hash (kernel will silo by contract address).\n        compute_inner_note_hash(note_interface, note_with_header)\n    } else if (header.nonce == 0) {\n        // If not transient and nonce is zero, that means we are reading a public note.\n        compute_siloed_note_hash(note_interface, note_with_header)\n    } else {\n        // When nonce is nonzero, that means we are reading a settled note (from tree) created in a\n        // previous TX. So we need the unique_siloed_note_hash which has already been hashed with\n        // contract address and then nonce. This hash will match the existing leaf in the private\n        // data tree, so the kernel can just perform a membership check directly on this hash/leaf.\n        compute_unique_siloed_note_hash(note_interface, note_with_header)\n    }\n\n}\n\npub fn compute_note_hash_and_nullifier<Note, N, S>(\n    note_interface: NoteInterface<Note, N>,\n    note_header: NoteHeader,\n    serialized_note: [Field; S],\n) -> [Field; 4] {\n    let deserialize = note_interface.deserialize;\n    let set_header = note_interface.set_header;\n    let mut note = deserialize(arr_copy_slice(serialized_note, [0; N], 0));\n    set_header(&mut note, note_header);\n\n    let compute_note_hash = note_interface.compute_note_hash;\n    let note_hash = compute_note_hash(note);\n    let inner_note_hash = compute_inner_hash(note_header.storage_slot, note_hash);\n\n    let siloed_note_hash = compute_siloed_hash(note_header.contract_address, inner_note_hash);\n\n    let unique_siloed_note_hash = compute_unique_hash(note_header.nonce, siloed_note_hash);\n\n    let compute_nullifier = note_interface.compute_nullifier;\n    let inner_nullifier = compute_nullifier(note);\n\n    [inner_note_hash, siloed_note_hash, unique_siloed_note_hash, inner_nullifier]\n}\n",
        "path": "/aztec/note/utils.nr"
      },
      "56": {
        "source": "use crate::constants_gen::CALL_PRIVATE_FUNCTION_RETURN_SIZE;\n\n#[oracle(callPrivateFunction)]\nfn call_private_function_oracle(\n    _contract_address: Field,\n    _function_selector: Field,\n    _args_hash: Field\n) -> [Field; CALL_PRIVATE_FUNCTION_RETURN_SIZE] {}\n\nunconstrained pub fn call_private_function_internal(\n    contract_address: Field,\n    function_selector: Field,\n    args_hash: Field\n) -> [Field; CALL_PRIVATE_FUNCTION_RETURN_SIZE] {\n    call_private_function_oracle(\n        contract_address,\n        function_selector,\n        args_hash,\n    )\n}",
        "path": "/aztec/oracle/call_private_function.nr"
      },
      "60": {
        "source": "use crate::types::point::Point;\nuse crate::address::compute_address;\n\n#[oracle(getPublicKeyAndPartialAddress)]\nfn get_public_key_and_partial_address_oracle(_address: Field) -> [Field; 3] {}\n\nunconstrained fn get_public_key_and_partial_address_internal(address: Field) -> [Field; 3] {\n  get_public_key_and_partial_address_oracle(address)\n}\n\npub fn get_public_key(address: Field) -> Point {\n  let result = get_public_key_and_partial_address_internal(address);\n  let pub_key_x = result[0];\n  let pub_key_y = result[1];\n  let partial_address = result[2];\n  \n  let calculated_address = compute_address(pub_key_x, pub_key_y, partial_address);\n  assert(calculated_address == address);\n  \n  Point::new(pub_key_x, pub_key_y)\n}\n",
        "path": "/aztec/oracle/get_public_key.nr"
      },
      "61": {
        "source": "use crate::oracle::get_public_key::get_public_key;\nuse crate::types::point::Point;\n\n#[oracle(getSecretKey)]\nfn get_secret_key_oracle(\n    _owner: Point,\n) -> [Field; dep::std::grumpkin_scalar::GRUMPKIN_SCALAR_SERIALIZED_LEN] {\n}\n\nunconstrained fn get_secret_key_internal(owner_public_key: Point) -> dep::std::grumpkin_scalar::GrumpkinScalar {\n    dep::std::grumpkin_scalar::deserialize_grumpkin_scalar(get_secret_key_oracle(owner_public_key))\n}\n\npub fn get_secret_key(owner: Field) -> dep::std::grumpkin_scalar::GrumpkinScalar {\n    let owner_public_key = get_public_key(owner);\n    let secret = get_secret_key_internal(owner_public_key);\n\n    // Constrain the owner - Nullifier secret key is currently just the encryption private key so we can constrain\n    // the owner by deriving the public key from the secret key and checking the result.\n    let computed_public_key = dep::std::grumpkin_scalar_mul::grumpkin_fixed_base(secret);\n    assert(owner_public_key.x == computed_public_key[0]);\n    assert(owner_public_key.y == computed_public_key[1]);\n\n    secret\n}\n",
        "path": "/aztec/oracle/get_secret_key.nr"
      },
      "63": {
        "source": "\n// contract_address + \n// args_hash +\n// crate::abi::FUNCTION_DATA_SIZE +\n// crate::abi::CALL_CONTEXT_SIZE +\n// = 2 + 4 + 7\nglobal ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE: Field = 13;\n\n#[oracle(enqueuePublicFunctionCall)]\nfn enqueue_public_function_call_oracle(\n    _contract_address: Field, \n    _function_selector: Field, \n    _args_hash: Field,\n) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE] {}\n\nunconstrained pub fn enqueue_public_function_call_internal(\n    contract_address: Field, \n    function_selector: Field,\n    args_hash: Field\n) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE] {\n    enqueue_public_function_call_oracle(\n        contract_address, \n        function_selector, \n        args_hash,\n    )\n}",
        "path": "/aztec/oracle/enqueue_public_function_call.nr"
      },
      "65": {
        "source": "use dep::std::option::Option;\nuse crate::note::{\n    note_header::NoteHeader,\n    note_interface::NoteInterface,\n};\nuse crate::utils::arr_copy_slice;\n\n#[oracle(notifyCreatedNote)]\nfn notify_created_note_oracle<N>(\n    _storage_slot: Field,\n    _serialized_note: [Field; N],\n    _inner_note_hash: Field,\n) -> Field {}\n\nunconstrained pub fn notify_created_note<N>(\n    storage_slot: Field,\n    serialized_note: [Field; N],\n    inner_note_hash: Field,\n) -> Field {\n    notify_created_note_oracle(storage_slot, serialized_note, inner_note_hash)\n}\n\n#[oracle(notifyNullifiedNote)]\nfn notify_nullified_note_oracle<N>(\n    _nullifier: Field,\n    _inner_note_hash: Field,\n) -> Field {}\n\nunconstrained pub fn notify_nullified_note<N>(\n    nullifier: Field,\n    inner_note_hash: Field,\n) -> Field {\n    notify_nullified_note_oracle(nullifier, inner_note_hash)\n}\n\n#[oracle(getNotes)]\nfn get_notes_oracle<N, S>(\n    _storage_slot: Field,\n    _num_selects: u8,\n    _select_by: [u8; N],\n    _select_values: [Field; N],\n    _sort_by: [u8; N],\n    _sort_order: [u2; N],\n    _limit: u32,\n    _offset: u32,\n    _return_size: u32,\n    _placeholder_fields: [Field; S],\n) -> [Field; S] {}\n\nunconstrained fn get_notes_oracle_wrapper<N, S>(\n    storage_slot: Field,\n    num_selects: u8,\n    select_by: [u8; N],\n    select_values: [Field; N],\n    sort_by: [u8; N],\n    sort_order: [u2; N],\n    limit: u32,\n    offset: u32,\n    mut placeholder_fields: [Field; S],\n)-> [Field; S] {\n    let return_size = placeholder_fields.len() as u32;\n    get_notes_oracle(storage_slot, num_selects, select_by, select_values, sort_by, sort_order, limit, offset, return_size, placeholder_fields)\n}\n\nunconstrained pub fn get_notes<Note, N, M, S, NS>(\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    num_selects: u8,\n    select_by: [u8; M],\n    select_values: [Field; M],\n    sort_by: [u8; M],\n    sort_order: [u2; M],\n    limit: u32,\n    offset: u32,\n    mut placeholder_opt_notes: [Option<Note>; S], // TODO: Remove it and use `limit` to initialize the note array.\n    placeholder_fields: [Field; NS], // TODO: Remove it and use `limit` to initialize the note array.\n) -> [Option<Note>; S] {\n    let fields = get_notes_oracle_wrapper(storage_slot, num_selects, select_by, select_values, sort_by, sort_order, limit, offset, placeholder_fields);\n    let num_notes = fields[0] as u32;\n    let contract_address = fields[1];\n    let deserialize = note_interface.deserialize;\n    let set_header = note_interface.set_header;\n    for i in 0..placeholder_opt_notes.len() {\n        if i as u32 < num_notes {\n            // lengths named as per typescript.\n            let return_header_length: Field = 2; // num_notes & contract_address.\n            let extra_preimage_length: Field = 2; // nonce & is_transient.\n            let read_offset: Field = return_header_length + i * (N + extra_preimage_length);\n            let nonce = fields[read_offset];\n            let is_transient = fields[read_offset + 1] as bool;\n            let header = NoteHeader { contract_address, nonce, storage_slot, is_transient };\n            let serialized_note = arr_copy_slice(fields, [0; N], read_offset + 2);\n            let mut note = deserialize(serialized_note);\n            set_header(&mut note, header);\n            placeholder_opt_notes[i] = Option::some(note);\n        };\n    };\n    placeholder_opt_notes\n}\n\n#[oracle(checkNullifierExists)]\nfn check_nullifier_exists_oracle(\n    _inner_nullifier: Field,\n) -> Field {}\n\nunconstrained pub fn check_nullifier_exists(inner_nullifier: Field) -> bool {\n    check_nullifier_exists_oracle(inner_nullifier) == 1\n}",
        "path": "/aztec/oracle/notes.nr"
      },
      "66": {
        "source": "\n#[oracle(storageRead)]\nfn storage_read_oracle<N>(\n    _storage_slot: Field,\n    _number_of_elements: Field,\n) -> [Field; N] {}\n\nunconstrained fn storage_read_oracle_wrapper<N>(_storage_slot: Field)-> [Field; N] {\n    storage_read_oracle(_storage_slot, N)\n}\n\npub fn storage_read<T, N>(\n    storage_slot: Field,\n    deserialize: fn ([Field; N]) -> T,\n) -> T {\n    let fields = storage_read_oracle_wrapper(storage_slot);\n    deserialize(fields)\n}\n\n#[oracle(storageWrite)]\nfn storage_write_oracle<N>(\n    _storage_slot: Field,\n    _values: [Field; N],\n) -> [Field; N] {}\n\n// TODO: Remove return value.\nunconstrained pub fn storage_write<N>(\n    storage_slot: Field,\n    fields: [Field; N]\n) {\n    let _hash = storage_write_oracle(storage_slot, fields);\n}",
        "path": "/aztec/oracle/storage.nr"
      },
      "67": {
        "source": "use crate::types::point::Point;\nuse crate::constants_gen::NUM_FIELDS_PER_SHA256;\n\n// TODO: Should take encrypted data.\n#[oracle(emitEncryptedLog)]\nfn emit_encrypted_log_oracle<N>(\n    _contract_address: Field,\n    _storage_slot: Field,\n    _encryption_pub_key: Point,\n    _preimage: [Field; N],\n)  -> Field {}\n\nunconstrained pub fn emit_encrypted_log<N>(\n    contract_address: Field,\n    storage_slot: Field,\n    encryption_pub_key: Point,\n    preimage: [Field; N],\n) -> [Field; NUM_FIELDS_PER_SHA256] {\n    [emit_encrypted_log_oracle(\n        contract_address,\n        storage_slot,\n        encryption_pub_key,\n        preimage,\n    ), 0]\n}\n\n#[oracle(emitUnencryptedLog)]\nfn emit_unencrypted_log_oracle<T>(_contract_address: Field, _event_selector: Field, _message: T)  -> Field {}\n\nunconstrained pub fn emit_unencrypted_log<T>(contract_address: Field, event_selector: Field, message: T) -> [Field; NUM_FIELDS_PER_SHA256] {\n    // https://github.com/AztecProtocol/aztec-packages/issues/885\n    [emit_unencrypted_log_oracle(contract_address, event_selector, message), 0]\n}",
        "path": "/aztec/oracle/logs.nr"
      },
      "68": {
        "source": "use crate::abi::FunctionData;\nuse crate::abi::PrivateCircuitPublicInputs;\nuse crate::constants_gen::GENERATOR_INDEX__CALL_STACK_ITEM;\nuse crate::hash::pedersen_hash;\n\nstruct PrivateCallStackItem {\n    contract_address: Field,\n    function_data: FunctionData,\n    public_inputs: PrivateCircuitPublicInputs,\n    is_execution_request: bool,\n}\n\nimpl PrivateCallStackItem {\n    pub fn hash(self) -> Field {\n        pedersen_hash([\n            self.contract_address,\n            self.function_data.hash(),\n            self.public_inputs.hash(),\n        ], GENERATOR_INDEX__CALL_STACK_ITEM)\n    }\n}",
        "path": "/aztec/private_call_stack_item.nr"
      },
      "69": {
        "source": "use crate::{\n    abi,\n    hash::pedersen_hash,\n    abi::{\n        PublicCircuitPublicInputs,\n        FunctionData,\n    },\n};\nuse crate::constants_gen::{\n    RETURN_VALUES_LENGTH,\n    GENERATOR_INDEX__CALL_STACK_ITEM,\n};\n\n// oracles\nuse crate::oracle::{\n    enqueue_public_function_call::enqueue_public_function_call_internal,\n};\n\nstruct PublicCallStackItem {\n    contract_address: Field,\n    function_data: FunctionData,\n    public_inputs: PublicCircuitPublicInputs,\n    is_execution_request: bool,\n}\n\nimpl PublicCallStackItem {\n    pub fn hash(self) -> Field {\n        pedersen_hash([\n            self.contract_address,\n            self.function_data.hash(),\n            self.public_inputs.hash(),\n        ], GENERATOR_INDEX__CALL_STACK_ITEM)\n    }\n}\n\n",
        "path": "/aztec/public_call_stack_item.nr"
      },
      "72": {
        "source": "use dep::std::option::Option;\nuse crate::constants_gen::EMPTY_NULLIFIED_COMMITMENT;\nuse crate::context::{PrivateContext, Context};\nuse crate::note::{\n    lifecycle::create_note,\n    note_getter::{get_note, view_notes},\n    note_interface::NoteInterface,\n    note_viewer_options::NoteViewerOptions,\n};\nuse crate::oracle::notes::check_nullifier_exists;\nuse crate::state_vars::singleton::compute_singleton_initialization_nullifier;\n\n// docs:start:struct\nstruct ImmutableSingleton<Note, N> {\n    context: Option<&mut PrivateContext>,\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    compute_initialization_nullifier: fn (Field, Option<Field>) -> Field,\n}\n// docs:end:struct\n\nimpl<Note, N> ImmutableSingleton<Note, N> {\n    // docs:start:new\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n        note_interface: NoteInterface<Note, N>,\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        ImmutableSingleton {\n            context: context.private,\n            storage_slot,\n            note_interface,\n            compute_initialization_nullifier: compute_singleton_initialization_nullifier,\n        }\n    }\n    // docs:end:new\n\n    // docs:start:is_initialized\n    unconstrained pub fn is_initialized(self, owner: Option<Field>) -> bool {\n        let compute_initialization_nullifier = self.compute_initialization_nullifier;\n        let nullifier = compute_initialization_nullifier(self.storage_slot, owner);\n        check_nullifier_exists(nullifier)\n    }\n    // docs:end:is_initialized\n\n    // docs:start:initialize\n    pub fn initialize(\n        self,\n        note: &mut Note, \n        owner: Option<Field>,\n        broadcast: bool,\n    ) {\n        let context = self.context.unwrap();\n\n        // Nullify the storage slot.\n        let compute_initialization_nullifier = self.compute_initialization_nullifier;\n        let nullifier = compute_initialization_nullifier(self.storage_slot, owner);\n        context.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT);\n\n        create_note(\n            context,\n            self.storage_slot,\n            note,\n            self.note_interface,\n            broadcast,\n        );\n    }\n    // docs:end:initialize\n\n    // docs:start:get_note\n    pub fn get_note(self) -> Note {\n        let context = self.context.unwrap();\n        let storage_slot = self.storage_slot;\n        get_note(context, storage_slot, self.note_interface)\n    }\n    // docs:end:get_note\n\n    // docs:start:view_note\n    unconstrained pub fn view_note(self) -> Note {\n        let options = NoteViewerOptions::new().set_limit(1);\n        view_notes(self.storage_slot, self.note_interface, options)[0].unwrap()\n    }\n    // docs:end:view_note\n}\n",
        "path": "/aztec/state_vars/immutable_singleton.nr"
      },
      "73": {
        "source": "use crate::context::{PrivateContext, PublicContext, Context};\nuse dep::std::option::Option;\nuse crate::hash::pedersen_hash;\n\n// docs:start:map\nstruct Map<V> {\n    context: Context,\n    storage_slot: Field,\n    state_var_constructor: fn(Context, Field) -> V,\n}\n// docs:end:map\n\nimpl<V> Map<V> {\n    // docs:start:new\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n        state_var_constructor: fn(Context, Field) -> V,\n    ) -> Map<V> {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Map {\n            context,\n            storage_slot,\n            state_var_constructor,\n        }\n    }\n    // docs:end:new\n\n    // docs:start:at\n    pub fn at(self, key: Field) -> V {\n        // TODO(#1204): use a generator index for the storage slot\n        let derived_storage_slot = pedersen_hash([self.storage_slot, key],0);\n\n        let state_var_constructor = self.state_var_constructor;\n        state_var_constructor(self.context, derived_storage_slot)\n    }\n    // docs:end:at\n}\n",
        "path": "/aztec/state_vars/map.nr"
      },
      "74": {
        "source": "use crate::context::{Context};\nuse crate::oracle::storage::storage_read;\nuse crate::oracle::storage::storage_write;\nuse crate::types::type_serialization::TypeSerializationInterface;\nuse dep::std::option::Option;\n\n// docs:start:public_state_struct\nstruct PublicState<T, T_SERIALIZED_LEN> {\n    context: Context,\n    storage_slot: Field,\n    serialization_methods: TypeSerializationInterface<T, T_SERIALIZED_LEN>,\n}\n// docs:end:public_state_struct\n\nimpl<T, T_SERIALIZED_LEN> PublicState<T, T_SERIALIZED_LEN> {\n    // docs:start:public_state_struct_new\n    pub fn new(\n        // Note: Passing the contexts to new(...) just to have an interface compatible with a Map.\n        context: Context,\n        storage_slot: Field,\n        serialization_methods: TypeSerializationInterface<T, T_SERIALIZED_LEN>,\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        PublicState {\n            context,\n            storage_slot,\n            serialization_methods,\n        }\n    }\n    // docs:end:public_state_struct_new\n\n    // docs:start:public_state_struct_read\n    pub fn read(self) -> T {\n        assert(self.context.private.is_none(), \"Public state writes only supported in public functions\");\n        storage_read(self.storage_slot, self.serialization_methods.deserialize)\n    }\n    // docs:end:public_state_struct_read\n\n    // docs:start:public_state_struct_write\n    pub fn write(self, value: T) {\n        assert(self.context.private.is_none(), \"Public state writes only supported in public functions\");\n        let serialize = self.serialization_methods.serialize;\n        let fields = serialize(value);\n        storage_write(self.storage_slot, fields);\n    }\n    // docs:end:public_state_struct_write\n}\n",
        "path": "/aztec/state_vars/public_state.nr"
      },
      "76": {
        "source": "use dep::std::option::Option;\nuse crate::constants_gen::{EMPTY_NULLIFIED_COMMITMENT, GENERATOR_INDEX__INITIALIZATION_NULLIFIER};\nuse crate::context::{PrivateContext, PublicContext, Context};\nuse crate::note::{\n    lifecycle::{create_note, destroy_note},\n    note_getter::{get_note, view_notes},\n    note_interface::NoteInterface,\n    note_viewer_options::NoteViewerOptions,\n};\nuse crate::oracle::{\n    get_secret_key::get_secret_key,\n    notes::check_nullifier_exists,\n};\nuse crate::hash::pedersen_hash;\n\npub fn compute_singleton_initialization_nullifier(storage_slot: Field, owner: Option<Field>) -> Field {\n    if owner.is_some() {\n        let secret = get_secret_key(owner.unwrap_unchecked());\n        pedersen_hash(\n            [storage_slot, secret.low, secret.high],\n            GENERATOR_INDEX__INITIALIZATION_NULLIFIER,\n        )\n    } else {\n        pedersen_hash(\n            [storage_slot],\n            GENERATOR_INDEX__INITIALIZATION_NULLIFIER,\n        )\n    }\n}\n\n// docs:start:struct\nstruct Singleton<Note, N> {\n    context: Option<&mut PrivateContext>,\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    compute_initialization_nullifier: fn (Field, Option<Field>) -> Field,\n}\n// docs:end:struct\n\nimpl<Note, N> Singleton<Note, N> {\n    // docs:start:new\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n        note_interface: NoteInterface<Note, N>,\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Singleton {\n            context: context.private,\n            storage_slot,\n            note_interface,\n            compute_initialization_nullifier: compute_singleton_initialization_nullifier,\n        }\n    }\n    // docs:end:new\n\n    // docs:start:is_initialized\n    unconstrained pub fn is_initialized(self, owner: Option<Field>) -> bool {\n        let compute_initialization_nullifier = self.compute_initialization_nullifier;\n        let nullifier = compute_initialization_nullifier(self.storage_slot, owner);\n        check_nullifier_exists(nullifier)\n    }\n    // docs:end:is_initialized\n\n    // docs:start:initialize\n    pub fn initialize(\n        self,\n        note: &mut Note,\n        owner: Option<Field>,\n        broadcast: bool,\n    ) {\n        let context = self.context.unwrap();\n\n        // Nullify the storage slot.\n        let compute_initialization_nullifier = self.compute_initialization_nullifier;\n        let nullifier = compute_initialization_nullifier(self.storage_slot, owner);\n        context.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT);\n\n        create_note(context, self.storage_slot, note, self.note_interface, broadcast);\n    }\n    // docs:end:initialize\n\n    // docs:start:replace\n    pub fn replace(\n        self,\n        new_note: &mut Note,\n        broadcast: bool,\n    ) {\n        let context = self.context.unwrap();\n        let prev_note = get_note(context, self.storage_slot, self.note_interface);\n\n        // Nullify previous note.\n        destroy_note(context, prev_note, self.note_interface);\n\n        // Add replacement note.\n        create_note(context, self.storage_slot, new_note, self.note_interface, broadcast);\n    }\n    // docs:end:replace\n\n    // docs:start:get_note\n    pub fn get_note(self, broadcast: bool) -> Note {\n        let context = self.context.unwrap();\n        let mut note = get_note(context, self.storage_slot, self.note_interface);\n\n        // Nullify current note to make sure it's reading the latest note.\n        destroy_note(context, note, self.note_interface);\n\n        // Add the same note again.\n        // Because a nonce is added to every note in the kernel, its nullifier will be different.\n        create_note(context, self.storage_slot, &mut note, self.note_interface, broadcast);\n\n        note\n    }\n    // docs:end:get_note\n\n    // docs:start:view_note\n    unconstrained pub fn view_note(self) -> Note {\n        let options = NoteViewerOptions::new().set_limit(1);\n        view_notes(self.storage_slot, self.note_interface, options)[0].unwrap()\n    }\n    // docs:end:view_note\n}\n",
        "path": "/aztec/state_vars/singleton.nr"
      },
      "80": {
        "source": "\nstruct BoundedVec<T, MaxLen> {\n    storage: [T; MaxLen],\n    len: Field,\n}\n\nimpl<T, MaxLen> BoundedVec<T, MaxLen> {\n    pub fn new(initial_value: T) -> Self {\n        BoundedVec { storage: [initial_value; MaxLen], len: 0 }\n    }\n\n    pub fn get(mut self: Self, index: Field) -> T {\n        assert(index as u64 < self.len as u64);\n        self.storage[index]\n    }\n\n    pub fn get_unchecked(mut self: Self, index: Field) -> T {\n        self.storage[index]\n    }\n\n    pub fn push(&mut self, elem: T) {\n        assert(self.len as u64 < MaxLen as u64);\n\n        self.storage[self.len] = elem;\n        self.len += 1;\n    }\n\n    pub fn push_array<Len>(&mut self, array: [T; Len]) {\n        let newLen = self.len + array.len();\n        assert(newLen as u64 <= MaxLen as u64);\n        for i in 0..array.len() {\n            self.storage[self.len + i] = array[i];\n        }\n        self.len = newLen;\n    }\n\n    pub fn pop(&mut self) -> T {\n        assert(self.len as u64 > 0);\n\n        let elem = self.storage[self.len - 1];\n        self.len -= 1;\n        elem\n    }\n\n    pub fn any<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = false;\n        let mut exceeded_len = false;\n        for i in 0..MaxLen {\n            exceeded_len |= i == self.len;\n            if (!exceeded_len) {\n                ret |= predicate(self.storage[i]);\n            }\n        }\n        ret\n    }\n}\n\n#[test]\nfn test_vec_push_pop() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    assert(vec.len == 0);\n    vec.push(2);\n    assert(vec.len == 1);\n    vec.push(4);\n    assert(vec.len == 2);\n    vec.push(6);\n    assert(vec.len == 3);\n    let x = vec.pop();\n    assert(x == 6);\n    assert(vec.len == 2);\n    assert(vec.get(0) == 2);\n    assert(vec.get(1) == 4);\n}\n\n#[test]\nfn test_vec_push_array() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    vec.push_array([2, 4]);\n    assert(vec.len == 2);\n    assert(vec.get(0) == 2);\n    assert(vec.get(1) == 4);\n}\n\n#[test(should_fail)]\nfn test_vec_get_out_of_bound() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    vec.push_array([2, 4]);\n    let _x = vec.get(2);\n}\n\n#[test(should_fail)]\nfn test_vec_get_not_declared() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    vec.push_array([2]);\n    let _x = vec.get(1);\n}\n\n#[test(should_fail)]\nfn test_vec_get_uninitialized() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    let _x = vec.get(0);\n}\n\n#[test(should_fail)]\nfn test_vec_push_overflow() {\n    let mut vec: BoundedVec<Field, 1> = BoundedVec::new(0);\n    vec.push(1);\n    vec.push(2);\n}\n\n#[test]\nfn test_vec_any() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    vec.push_array([2, 4, 6]);\n    assert(vec.any(|v| v == 2) == true);\n    assert(vec.any(|v| v == 4) == true);\n    assert(vec.any(|v| v == 6) == true);\n    assert(vec.any(|v| v == 3) == false);\n}\n\n#[test]\nfn test_vec_any_not_default() {\n    let default_value = 1;\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(default_value);\n    vec.push_array([2, 4]);\n    assert(vec.any(|v| v == default_value) == false);\n}",
        "path": "/aztec/types/vec.nr"
      },
      "82": {
        "source": "use crate::types::type_serialization::TypeSerializationInterface;\n\nglobal BOOL_SERIALIZED_LEN: Field = 1;\n\nfn deserializeBool(fields: [Field; BOOL_SERIALIZED_LEN]) -> bool {\n    fields[0] as bool\n}\n\nfn serializeBool(value: bool) -> [Field; BOOL_SERIALIZED_LEN] {\n    [value as Field]\n}\n\nglobal BoolSerializationMethods = TypeSerializationInterface {\n    deserialize: deserializeBool,\n    serialize: serializeBool,\n};",
        "path": "/aztec/types/type_serialization/bool_serialization.nr"
      },
      "86": {
        "source": "pub fn arr_copy_slice<T, N, M>(\n    src: [T; N],\n    mut dst: [T; M],\n    offset: Field,\n) -> [T; M] {\n    for i in 0..dst.len() {\n        dst[i] = src[i + offset];\n    }\n    dst\n}\n\npub fn field_from_bytes<N>(bytes: [u8; N], big_endian: bool) -> Field {\n    assert(bytes.len() as u32 < 32, \"field_from_bytes: N must be less than 32\");\n    let mut as_field = 0;\n    let mut offset = 1;\n    for i in 0..N {\n        let mut index = i;\n        if big_endian {\n            index = N - i - 1;\n        }\n        as_field += (bytes[index] as Field) * offset;\n        offset *= 256;\n    }\n\n    as_field\n}",
        "path": "/aztec/utils.nr"
      },
      "87": {
        "source": "use dep::aztec::context::{PrivateContext, PublicContext, Context};\nuse dep::aztec::selector::compute_selector;\nuse dep::aztec::state_vars::{map::Map, public_state::PublicState};\nuse dep::aztec::types::type_serialization::bool_serialization::{BoolSerializationMethods,BOOL_SERIALIZED_LEN};\n\nuse crate::entrypoint::EntrypointPayload;\nuse crate::auth::IS_VALID_SELECTOR;\n\nstruct AccountActions {\n  context: Context,\n  is_valid_impl: fn(&mut PrivateContext, Field) -> bool,\n  approved_action: Map<PublicState<bool, BOOL_SERIALIZED_LEN>>,\n}\n\nimpl AccountActions {\n  pub fn init(context: Context, approved_action_storage_slot: Field, is_valid_impl: fn(&mut PrivateContext, Field) -> bool) -> Self {\n    AccountActions {\n      context: context,\n      is_valid_impl: is_valid_impl,\n      approved_action: Map::new(\n        context,\n        approved_action_storage_slot,\n        |context, slot| {\n          PublicState::new(context, slot, BoolSerializationMethods)\n        },\n      ),\n    }\n  }\n\n  pub fn private(context: &mut PrivateContext, approved_action_storage_slot: Field, is_valid_impl: fn(&mut PrivateContext, Field) -> bool) -> Self {\n    AccountActions::init(Context::private(context), approved_action_storage_slot, is_valid_impl)\n  }\n\n  pub fn public(context: &mut PublicContext, approved_action_storage_slot: Field, is_valid_impl: fn(&mut PrivateContext, Field) -> bool) -> Self {\n    AccountActions::init(Context::public(context), approved_action_storage_slot, is_valid_impl)\n  }\n  \n  // docs:start:entrypoint\n  pub fn entrypoint(self, payload: EntrypointPayload) {\n    let message_hash = payload.hash();\n    let valid_fn = self.is_valid_impl;\n    let private_context = self.context.private.unwrap();\n    assert(valid_fn(private_context, message_hash));\n    payload.execute_calls(private_context);\n  }\n  // docs:end:entrypoint\n\n  pub fn is_valid(self, message_hash: Field) -> Field {\n    let valid_fn = self.is_valid_impl;\n    if (valid_fn(self.context.private.unwrap(), message_hash)) {\n        IS_VALID_SELECTOR\n    } else {\n        0\n    }\n  }\n\n  pub fn is_valid_public(self, message_hash: Field) -> Field {\n    let value = self.approved_action.at(message_hash).read();\n    if (value){\n        IS_VALID_SELECTOR\n    } else {\n        0\n    }\n  }\n\n  pub fn internal_set_is_valid_storage(self, message_hash: Field, value: bool) {\n    self.approved_action.at(message_hash).write(value);\n  }\n}",
        "path": "/authwit/account.nr"
      },
      "88": {
        "source": "#[oracle(getAuthWitness)]\nfn get_auth_witness_oracle<N>(_message_hash: Field) -> [Field; N] {}\n\nunconstrained pub fn get_auth_witness<N>(message_hash: Field) -> [Field; N] {\n    get_auth_witness_oracle(message_hash)\n}",
        "path": "/authwit/auth_witness.nr"
      },
      "90": {
        "source": "use dep::aztec::abi;\nuse dep::aztec::types::vec::BoundedVec;\nuse dep::aztec::hash::pedersen_hash;\nuse dep::aztec::context::PrivateContext;\nuse dep::aztec::private_call_stack_item::PrivateCallStackItem;\nuse dep::aztec::public_call_stack_item::PublicCallStackItem;    \nuse dep::aztec::constants_gen::GENERATOR_INDEX__SIGNATURE_PAYLOAD;\n\nglobal ACCOUNT_MAX_CALLS: Field = 4;\n// 1 (ARGS_HASH) + 1 (FUNCTION_SELECTOR) + 1 (TARGET_ADDRESS) + 1 (IS_PUBLIC)\nglobal FUNCTION_CALL_SIZE: Field = 4;\n// 3 * 32 + 1\nglobal FUNCTION_CALL_SIZE_IN_BYTES: Field = 97;\n\nstruct FunctionCall {\n  args_hash: Field,\n  function_selector: Field,\n  target_address: Field,\n  is_public: bool,\n}\n\nimpl FunctionCall {\n  fn serialize(self) -> [Field; FUNCTION_CALL_SIZE] {\n    [self.args_hash, self.function_selector, self.target_address, self.is_public as Field]\n  }\n\n  fn to_be_bytes(self) -> [u8; FUNCTION_CALL_SIZE_IN_BYTES] {\n    let mut bytes: [u8; FUNCTION_CALL_SIZE_IN_BYTES] = [0; FUNCTION_CALL_SIZE_IN_BYTES];\n    let args_hash_bytes = self.args_hash.to_be_bytes(32);\n    for i in 0..32 { bytes[i] = args_hash_bytes[i]; }\n    let function_selector_bytes = self.function_selector.to_be_bytes(32);\n    for i in 0..32 { bytes[i + 32] = function_selector_bytes[i]; }\n    let target_address_bytes = self.target_address.to_be_bytes(32);\n    for i in 0..32 { bytes[i + 64] = target_address_bytes[i]; }\n    bytes[96] = self.is_public as u8;\n    bytes\n  }\n}\n\n// FUNCTION_CALL_SIZE * ACCOUNT_MAX_CALLS + 1\nglobal ENTRYPOINT_PAYLOAD_SIZE: Field = 17;\n// FUNCTION_CALL_SIZE_IN_BYTES * ACCOUNT_MAX_CALLS + 32\nglobal ENTRYPOINT_PAYLOAD_SIZE_IN_BYTES: Field = 420;\n\n// docs:start:entrypoint-struct\nstruct EntrypointPayload {\n  function_calls: [FunctionCall; ACCOUNT_MAX_CALLS],\n  nonce: Field,\n}\n// docs:end:entrypoint-struct\n\nimpl EntrypointPayload {\n  fn hash(self) -> Field {\n    pedersen_hash(\n      self.serialize(), \n      GENERATOR_INDEX__SIGNATURE_PAYLOAD\n    )\n  }\n\n  // Serializes the entrypoint struct\n  fn serialize(self) -> [Field; ENTRYPOINT_PAYLOAD_SIZE] {\n    let mut fields: BoundedVec<Field, ENTRYPOINT_PAYLOAD_SIZE> = BoundedVec::new(0); \n    for call in self.function_calls {\n      fields.push_array(call.serialize());\n    }\n    fields.push(self.nonce);\n    fields.storage\n  }\n\n  // Serializes the payload as an array of bytes. Useful for hashing with sha256.\n  fn to_be_bytes(self) -> [u8; ENTRYPOINT_PAYLOAD_SIZE_IN_BYTES] {\n    let mut bytes: [u8; ENTRYPOINT_PAYLOAD_SIZE_IN_BYTES] = [0; ENTRYPOINT_PAYLOAD_SIZE_IN_BYTES];\n\n    for i in 0..ACCOUNT_MAX_CALLS {\n      let item_bytes = self.function_calls[i].to_be_bytes();\n      for j in 0..FUNCTION_CALL_SIZE_IN_BYTES { \n        bytes[i * FUNCTION_CALL_SIZE_IN_BYTES + j] = item_bytes[j];\n      }\n    }\n\n    let nonce_bytes = self.nonce.to_be_bytes(32);\n    let nonce_offset = FUNCTION_CALL_SIZE_IN_BYTES * ACCOUNT_MAX_CALLS;\n    for j in 0..32 {\n      bytes[nonce_offset + j] = nonce_bytes[j];\n    }\n    \n    bytes\n  }\n\n  // Executes all private and public calls \n  // docs:start:entrypoint-execute-calls\n  fn execute_calls(self, context: &mut PrivateContext) {\n    for call in self.function_calls {\n      if call.target_address != 0 {\n        if call.is_public {\n          context.call_public_function_with_packed_args(\n            call.target_address, call.function_selector, call.args_hash\n          );\n        } else {\n          let _result = context.call_private_function_with_packed_args(\n            call.target_address, call.function_selector, call.args_hash\n          );\n        }\n      }\n    }\n  }\n  // docs:end:entrypoint-execute-calls\n}",
        "path": "/authwit/entrypoint.nr"
      },
      "91": {
        "source": "use dep::aztec::{\n    note::{\n        note_header::NoteHeader,\n        note_interface::NoteInterface,\n        utils::compute_unique_siloed_note_hash,\n    },\n    hash::pedersen_hash,\n    oracle::{\n        get_secret_key::get_secret_key,\n        get_public_key::get_public_key,\n    },\n    log::emit_encrypted_log,\n    context::PrivateContext,\n};\n\nglobal PUBLIC_KEY_NOTE_LEN: Field = 5;\n\n// Stores a public key composed of two fields\n// TODO: Do we need to include a nonce, in case we want to read/nullify/recreate with the same pubkey value?\nstruct PublicKeyNote {\n    x: [u8; 32],\n    y: [u8; 32],\n    owner: Field, // We store the owner address only to get the secret key to compute the nullifier and to broadcast\n    header: NoteHeader,\n}\n\nimpl PublicKeyNote {\n    pub fn new(x: [u8; 32], y: [u8; 32], owner: Field) -> Self {\n        PublicKeyNote {\n            x,\n            y,\n            owner,\n            header: NoteHeader::empty(),\n        }\n    }\n\n    // serialize the note as 5 fields where:\n    // [0] = x[0..31] (upper bound excluded)\n    // [1] = x[31]\n    // [2] = y[0..31]\n    // [3] = y[31]\n    // [4] = owner\n    pub fn serialize(self) -> [Field; PUBLIC_KEY_NOTE_LEN] {\n        let mut x: Field = 0;\n        let mut y: Field = 0;\n        let mut mul: Field = 1;\n\n        for i in 1..32 {\n          let byte_x: Field = self.x[31 - i] as Field;\n          x = x + (byte_x * mul);\n          let byte_y: Field = self.y[31 - i] as Field;\n          y = y + (byte_y * mul);\n          mul *= 256;\n        }\n\n        let last_x = self.x[31] as Field;\n        let last_y = self.y[31] as Field;\n        \n        let res: [Field; PUBLIC_KEY_NOTE_LEN] = [x, last_x, y, last_y, self.owner];\n        res\n    }\n\n    pub fn compute_nullifier(self) -> Field {\n        let unique_siloed_note_hash = compute_unique_siloed_note_hash(PublicKeyNoteMethods, self);\n        let secret = get_secret_key(self.owner);\n        // TODO(#1205) Should use a non-zero generator index.\n        pedersen_hash([\n            unique_siloed_note_hash,\n            secret.low,\n            secret.high,\n        ],0)\n    }\n\n    pub fn set_header(&mut self, header: NoteHeader) {\n        self.header = header;\n    }\n\n    // Broadcasts the note as an encrypted log on L1.\n    pub fn broadcast(self, context: &mut PrivateContext, slot: Field) {\n        let encryption_pub_key = get_public_key(self.owner);\n        emit_encrypted_log(\n            context,\n            (*context).this_address(),\n            slot,\n            encryption_pub_key,\n            self.serialize(),\n        );\n    }\n}\n\nfn deserialize(preimage: [Field; PUBLIC_KEY_NOTE_LEN]) -> PublicKeyNote {\n    let mut x: [u8; 32] = [0;32];\n    let mut y: [u8; 32] = [0;32];\n\n    let part_x = preimage[0].to_be_bytes(32);\n    for i in 0..31 { x[i] = part_x[i + 1]; }\n    x[31] = preimage[1].to_be_bytes(32)[31];\n\n    let part_y = preimage[2].to_be_bytes(32);\n    for i in 0..31 { y[i] = part_y[i + 1]; }\n    y[31] = preimage[3].to_be_bytes(32)[31];\n\n    PublicKeyNote {\n        x,\n        y,\n        owner: preimage[4],\n        header: NoteHeader::empty(),\n    }\n}\n\nfn serialize(note: PublicKeyNote) -> [Field; PUBLIC_KEY_NOTE_LEN] {\n    note.serialize()\n}\n\nfn compute_note_hash(note: PublicKeyNote) -> Field {\n    // TODO(#1205) Should use a non-zero generator index.\n    pedersen_hash(note.serialize(),0)\n}\n\nfn compute_nullifier(note: PublicKeyNote) -> Field {\n    note.compute_nullifier()\n}\n\nfn get_header(note: PublicKeyNote) -> NoteHeader {\n    note.header\n}\n\nfn set_header(note: &mut PublicKeyNote, header: NoteHeader) {\n    note.set_header(header);\n}\n\n// Broadcasts the note as an encrypted log on L1.\nfn broadcast(context: &mut PrivateContext, slot: Field, note: PublicKeyNote) {\n    note.broadcast(context, slot);\n}\n\nglobal PublicKeyNoteMethods = NoteInterface {\n    deserialize,\n    serialize,\n    compute_note_hash,\n    compute_nullifier,\n    get_header,\n    set_header,\n    broadcast,\n};\n",
        "path": "/Users/marek/Projects/quetzal/src/contracts/webauthn_account_contract/src/public_key_note.nr"
      },
      "92": {
        "source": "use dep::std;\nuse crate::utils::prefix_sha256_hash;\n\nglobal CLIENT_DATA_JSON_MAX_LEN = 255;\n\npub fn validate_webauthn_signature<N>(\n    authenticator_data: [u8; 37],\n    client_data_json_len: u8,\n    client_data_json: [u8; CLIENT_DATA_JSON_MAX_LEN],\n    signature: [u8; 64],\n    challenge: [u8; 43],\n    pub_key_x: [u8; 32], \n    pub_key_y: [u8; 32]\n) {\n    let client_data_json_hash = prefix_sha256_hash(client_data_json_len, client_data_json);\n    let concat = concatenate_arrays(authenticator_data, client_data_json_hash);\n    let hashed_data = std::hash::sha256(concat);\n\n    for i in 0..(challenge.len()) {\n        assert(challenge[i] == client_data_json[36 + i]);\n    }\n\n    let valid_signature = std::ecdsa_secp256r1::verify_signature(pub_key_x, pub_key_y, signature, hashed_data);\n    assert(valid_signature);\n}\n\nfn concatenate_arrays(a: [u8; 37], b: [u8; 32]) -> [u8; 69] {\n    let mut result = [0; 69];\n    for i in 0..37 {\n        result[i] = a[i];\n    }\n    for i in 0..32 {\n        result[i+37] = b[i];\n    }\n    result\n}\n\n#[test]\nfn test_safari_len_114() {\n    let pub_key_x = [232,155,149,83,161,121,57,152,190,94,194,196,50,138,34,150,50,132,156,142,157,46,110,191,24,252,215,219,14,167,123,177];\n    let pub_key_y = [209,135,117,243,19,54,46,174,93,114,37,231,234,2,194,226,112,129,87,208,143,214,86,114,202,29,239,172,51,187,44,249];\n\n    let challenge = [65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69];\n    let authenticator_data = [73,150,13,229,136,14,140,104,116,52,23,15,100,118,96,91,143,228,174,185,162,134,50,199,153,92,243,186,131,29,151,99,29,0,0,0,0];\n    // {\"type\":\"webauthn.get\",\"challenge\":\"AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQE\",\"origin\":\"http://localhost:5173\"}\n    let client_data_json = [123,34,116,121,112,101,34,58,34,119,101,98,97,117,116,104,110,46,103,101,116,34,44,34,99,104,97,108,108,101,110,103,101,34,58,34,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,\n        81,69,66,65,81,69,66,65,81,69,66,65,81,69,34,44,34,111,114,105,103,105,110,34,58,34,104,116,116,112,58,47,47,108,111,99,97,108,104,111,115,116,58,53,49,55,51,34,125,\n        0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, \n        0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0\n    ];\n    let signature = [142,114,209,59,85,51,124,10,189,151,231,169,97,1,220,91,24,25,29,33,111,40,252,40,14,196,205,100,125,196,120,62,60,196,100,41,212,143,57,228,175,199,23,146,199,243,216,2,182,243,59,8,114,235,53,15,13,88,26,204,49,179,199,149];\n    validate_webauthn_signature(authenticator_data, 114, client_data_json, signature, challenge, pub_key_x, pub_key_y);\n}\n\n#[test]\nfn test_chrome_clientDataJSON_len_134() {\n    let pub_key_x = [24,181,205,132,188,222,167,57,147,108,111,250,62,245,50,210,105,145,89,216,239,229,45,106,67,251,217,217,146,37,193,127];\n    let pub_key_y = [47,34,210,182,5,51,120,121,143,11,174,114,235,12,13,242,128,168,68,233,56,20,116,216,20,72,211,11,94,38,197,25];\n\n    let challenge = [65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69];\n    let authenticator_data = [73,150,13,229,136,14,140,104,116,52,23,15,100,118,96,91,143,228,174,185,162,134,50,199,153,92,243,186,131,29,151,99,5,0,0,0,0];\n    // {\"type\":\"webauthn.get\",\"challenge\":\"AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQE\",\"origin\":\"http://localhost:5173\",\"crossOrigin\":false}\n    let client_data_json = [123,34,116,121,112,101,34,58,34,119,101,98,97,117,116,104,110,46,103,101,116,34,44,34,99,104,97,108,108,101,110,103,101,34,58,34,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,\n        81,69,66,65,81,69,66,65,81,69,66,65,81,69,34,44,34,111,114,105,103,105,110,34,58,34,104,116,116,112,58,47,47,108,111,99,97,108,104,111,115,116,58,53,49,55,51,34,44,34,99,114,111,115,115,79,114,105,103,105,110,34,58,102,97,108,115,101,125,\n        0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0\n        ];\n    let signature = [28,230,224,46,41,42,141,231,248,7,247,21,82,94,44,217,93,77,248,54,128,36,40,88,196,12,178,176,42,234,86,195,56,209,248,103,90,44,146,7,232,1,87,180,139,224,93,183,177,224,36,179,150,83,177,224,18,81,127,10,185,237,17,203];\n    validate_webauthn_signature(authenticator_data, 134, client_data_json, signature, challenge, pub_key_x, pub_key_y);\n}\n\n#[test]\nfn test_chrome_clientDataJSON_len_243() {\n    let pub_key_x = [24,181,205,132,188,222,167,57,147,108,111,250,62,245,50,210,105,145,89,216,239,229,45,106,67,251,217,217,146,37,193,127];\n    let pub_key_y = [47,34,210,182,5,51,120,121,143,11,174,114,235,12,13,242,128,168,68,233,56,20,116,216,20,72,211,11,94,38,197,25];\n\n    let challenge = [65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69];\n    let authenticator_data = [73,150,13,229,136,14,140,104,116,52,23,15,100,118,96,91,143,228,174,185,162,134,50,199,153,92,243,186,131,29,151,99,5,0,0,0,0];\n    // {\"type\":\"webauthn.get\",\"challenge\":\"AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQE\",\"origin\":\"http://localhost:5173\",\"crossOrigin\":false,\"other_keys_can_be_added_here\":\"do not compare clientDataJSON against a template. See https://goo.gl/yabPex\"}\n    let client_data_json = [123,34,116,121,112,101,34,58,34,119,101,98,97,117,116,104,110,46,103,101,116,34,44,34,99,104,97,108,108,101,110,103,101,34,58,34,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,\n        69,66,65,81,69,66,65,81,69,66,65,81,69,34,44,34,111,114,105,103,105,110,34,58,34,104,116,116,112,58,47,47,108,111,99,97,108,104,111,115,116,58,53,49,55,51,34,44,34,99,114,111,115,115,79,114,105,103,105,110,34,58,102,97,108,115,101,44,34,\n        111,116,104,101,114,95,107,101,121,115,95,99,97,110,95,98,101,95,97,100,100,101,100,95,104,101,114,101,34,58,34,100,111,32,110,111,116,32,99,111,109,112,97,114,101,32,99,108,105,101,110,116,68,97,116,97,74,83,79,78,32,97,103,97,105,110,\n        115,116,32,97,32,116,101,109,112,108,97,116,101,46,32,83,101,101,32,104,116,116,112,115,58,47,47,103,111,111,46,103,108,47,121,97,98,80,101,120,34,125,0,0,0,0,0,0,0,0,0,0,0,0];\n    let signature = [158,222,80,217,211,123,180,66,252,52,202,35,237,105,242,104,192,71,221,62,135,27,236,194,133,73,73,240,164,244,240,100,78,28,119,45,57,122,83,123,116,114,199,203,57,61,8,95,250,34,128,101,237,32,54,213,29,245,26,84,1,71,225,226];\n    validate_webauthn_signature(authenticator_data, 243, client_data_json, signature, challenge, pub_key_x, pub_key_y);\n}",
        "path": "/Users/marek/Projects/quetzal/src/contracts/webauthn_account_contract/src/webauthn.nr"
      },
      "93": {
        "source": "use dep::std;\n\npub fn convert_field_to_array(f: Field) -> [u8; 32] {\n    let mut res = [0; 32];\n    let slice = f.to_be_bytes(32);\n    for i in 0..32 {\n        res[i] = slice[i];\n    }\n    res\n}\n\npub fn convert_to_array_to_field(a: [u8; 32]) -> Field {\n    let mut res: Field = 0;\n    let mut multiplier = 1;\n    for i in 0..32 {\n        res = res + (a[31 - i] as Field) * multiplier;\n        multiplier *= 256;\n    }\n    res\n}\n\npub fn prefix_sha256_hash<N>(prefix_length: u8, input: [u8; N]) -> [u8; 32] {\n    let mut result = [0; 32];\n    assert([1, 2, 3, 114, 134, 243].any(|x| x == prefix_length), \"Length is not supported\");\n    if prefix_length == 1 {\n        result = std::hash::sha256(prefix(input, [0; 1]));\n    }\n    if prefix_length == 2 {\n        result = std::hash::sha256(prefix(input, [0; 2]));\n    }\n    if prefix_length == 3 {\n        result = std::hash::sha256(prefix(input, [0; 3]));\n    }\n    if prefix_length == 114 {\n        result = std::hash::sha256(prefix(input, [0; 114]));\n    }\n    if prefix_length == 134 {\n        result = std::hash::sha256(prefix(input, [0; 134]));\n    }\n    if prefix_length == 243 {\n        result = std::hash::sha256(prefix(input, [0; 243]));\n    }\n    result\n}\n\nfn prefix<N, M>(input: [u8; N], mut result: [u8; M]) -> [u8; M] {\n    for i in 0..M {\n        result[i] = input[i];\n    }\n    result\n}\n\npub fn as_byte(s: str<1>) -> u8 {\n    s.as_bytes()[0]\n}\n\n#[test]\nfn test_as_byte() {\n    assert_eq(97, as_byte(\"a\"));\n    assert_eq(65, as_byte(\"A\"));\n    assert_eq(35, as_byte(\"#\"));\n}\n\n#[test]\nfn test_convert_field_to_array() {\n    let max_field_value = 21888242871839275222246405745257275088548364400416034343698204186575808495617;\n\n    assert_eq([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,170], convert_field_to_array(16711850));\n    assert_eq([48, 100, 78, 114, 225, 49, 160, 41, 184, 80, 69, 182, 129, 129, 88, 93, 40, 51, 232, 72, 121, 185, 112, 145, 67, 225, 245, 147, 240, 0, 0, 0], convert_field_to_array(max_field_value - 1));\n    assert_eq([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], convert_field_to_array(max_field_value));\n}\n\n#[test]\nfn test_convert_array_to_field() {\n    let max_field_value = 21888242871839275222246405745257275088548364400416034343698204186575808495617;\n\n    assert_eq(16711850, convert_to_array_to_field([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,170]));\n    assert_eq(max_field_value - 1, convert_to_array_to_field([48, 100, 78, 114, 225, 49, 160, 41, 184, 80, 69, 182, 129, 129, 88, 93, 40, 51, 232, 72, 121, 185, 112, 145, 67, 225, 245, 147, 240, 0, 0, 0]));\n    assert_eq(max_field_value, convert_to_array_to_field([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ]));\n}\n\n#[test]\nfn test_prefix_sha256_hash() {\n    let input = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    assert_eq(std::hash::sha256([1]), prefix_sha256_hash(1, input));\n    assert_eq(std::hash::sha256([1, 2]), prefix_sha256_hash(2, input));\n    assert_eq(std::hash::sha256([1, 2, 3]), prefix_sha256_hash(3, input));\n    assert_eq(std::hash::sha256([1; 114]), prefix_sha256_hash(114, [1; 1000]));\n    assert_eq(std::hash::sha256([1; 134]), prefix_sha256_hash(134, [1; 1000]));\n    assert_eq(std::hash::sha256([1; 243]), prefix_sha256_hash(243, [1; 1000]));\n}\n\n#[test(should_fail)]\nfn test_prefix_sha256_hash_fail() {\n    let input = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    prefix_sha256_hash(4, input);\n}\n",
        "path": "/Users/marek/Projects/quetzal/src/contracts/webauthn_account_contract/src/utils.nr"
      },
      "94": {
        "source": "use dep::std;\nuse crate::utils::as_byte;\n\nglobal MAX_LEN = 255;\n\npub fn base64_encode_url_safe_no_pad<N, M>(input: [u8; N], mut result: [u8; M]) -> [u8; M] {\n    assert(base64_calculate_length(input) == M);\n\n    let mut max_result = [0; MAX_LEN];\n    let mut max_input = [0; MAX_LEN];\n    for i in 0..input.len() {\n        max_input[i] = input[i];\n    }\n    for i in 0..((N as u32) / 3 + 1) {\n        let chunk = convert_chunk([max_input[i * 3], max_input[i * 3 + 1], max_input[i * 3 + 2]]);\n        for j in 0..4 {\n            max_result[i * 4 + j] = chunk[j];\n        }\n    }\n\n    for i in 0..result.len() {\n        result[i] = max_result[i];\n    }\n    result\n}\n\nfn base64_calculate_length<N>(input: [u8; N]) -> u32 {\n    let input_suffix_len: u32 = (input.len() as u32) % 3;\n    let mut base64_suffix_len = 0;\n    if input_suffix_len == 1 {\n        base64_suffix_len = 2;\n    } else if input_suffix_len == 2 {\n        base64_suffix_len = 3;\n    }\n\n    4 * (input.len() as u32 / 3) + base64_suffix_len\n}\n\nfn convert_chunk(input: [u8; 3]) -> [u8; 4] {\n    let mut result = [0; 4];\n    result[0] = (input[0] >> 2);\n    result[1] = (std::wrapping_shift_left(input[0], 6) >> 2) + (input[1] >> 4);\n    result[2] = (std::wrapping_shift_left(input[1], 4) >> 2) + (input[2] >> 6);\n    result[3] = std::wrapping_shift_left(input[2], 2) >> 2;\n    for i in 0..4 {\n        result[i] = convert_base64_number(result[i]);\n    }\n    result\n}\n\nfn convert_base64_number(n: u8) -> u8 {\n    let mut result: u8 = 0;\n    if n >= 0 & n <= 25 {\n        result = n + 65;\n    } else if n >= 26 & n <= 51 {\n        result = n + 71;\n    } else if n >= 52 & n <= 61 {\n        result = n - 4;\n    } else if n == 62 {\n        result = 45;\n    } else if n == 63 {\n        result = 95;\n    }\n    result\n}\n\n#[test]\nfn test_convert_base64_number() {\n    assert_eq(as_byte(\"A\"), convert_base64_number(0));\n    assert_eq(as_byte(\"Z\"), convert_base64_number(25));\n    assert_eq(as_byte(\"a\"), convert_base64_number(26));\n    assert_eq(as_byte(\"z\"), convert_base64_number(51));\n    assert_eq(as_byte(\"0\"), convert_base64_number(52));\n    assert_eq(as_byte(\"9\"), convert_base64_number(61));\n    assert_eq(as_byte(\"-\"), convert_base64_number(62));\n    assert_eq(as_byte(\"_\"), convert_base64_number(63));\n}\n\n#[test]\nfn test_base64_encode_url_safe_no_pad_simple() {\n    assert_eq(base64_encode_url_safe_no_pad([], []), []);\n    assert_eq(base64_encode_url_safe_no_pad([0], [0; 2]), \"AA\".as_bytes());\n    assert_eq(base64_encode_url_safe_no_pad([25 << 2], [0; 2]), \"ZA\".as_bytes());\n    assert_eq(base64_encode_url_safe_no_pad([26 << 2], [0; 2]), \"aA\".as_bytes());\n    assert_eq(base64_encode_url_safe_no_pad([52 << 2], [0; 2]), \"0A\".as_bytes());\n    assert_eq(base64_encode_url_safe_no_pad([62 << 2], [0; 2]), \"-A\".as_bytes());\n    assert_eq(base64_encode_url_safe_no_pad([63 << 2], [0; 2]), \"_A\".as_bytes());\n    assert_eq(base64_encode_url_safe_no_pad([1,2], [0; 3]), \"AQI\".as_bytes());\n    assert_eq(base64_encode_url_safe_no_pad([1,2,3], [0; 4]), \"AQID\".as_bytes());\n    assert_eq(base64_encode_url_safe_no_pad([1,2,3,4], [0; 6]), \"AQIDBA\".as_bytes());\n    assert_eq(base64_encode_url_safe_no_pad([1,2,3,4,5], [0; 7]), \"AQIDBAU\".as_bytes());\n    assert_eq(base64_encode_url_safe_no_pad([1,2,3,4,5,6], [0; 8]), \"AQIDBAUG\".as_bytes());\n    assert_eq(base64_encode_url_safe_no_pad([1,2,3,4,5,6,7, 27<<2, 53<<2, 62<<2], [0; 14]), \"AQIDBAUGB2zU-A\".as_bytes());\n}\n\n#[test]\nfn test_base64_encode_url_safe_no_pad_32_bytes_input() {\n    assert_eq(\n        base64_encode_url_safe_no_pad([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32], [0; 43]), \n        \"AQIDBAUGBwgJCgsMDQ4PEBESExQVFhcYGRobHB0eHyA\".as_bytes());\n\n    assert_eq(\n        base64_encode_url_safe_no_pad([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [0; 43]),\n        [65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69]        \n    );\n\n    assert_eq(\n        base64_encode_url_safe_no_pad([9,208,128,166,213,134,85,203,32,252,64,17,161,20,104,49,251,160,62,253,81,254,233,91,8,240,184,150,220,73,189,86], [0; 43]),\n        [67,100,67,65,112,116,87,71,86,99,115,103,95,69,65,82,111,82,82,111,77,102,117,103,80,118,49,82,95,117,108,98,67,80,67,52,108,116,120,74,118,86,89]\n    );\n}\n",
        "path": "/Users/marek/Projects/quetzal/src/contracts/webauthn_account_contract/src/base64.nr"
      }
    }
  },
  "aztecNrVersion": "aztec-packages-v0.14.2"
}

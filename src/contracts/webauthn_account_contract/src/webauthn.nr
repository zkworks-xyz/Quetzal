use dep::std;
use crate::utils::prefix_sha256_hash;

global CLIENT_DATA_JSON_MAX_LEN = 255;

fn validate_webauthn_signature<N>(
    authenticator_data: [u8; 37],
    client_data_json_len: u8,
    client_data_json: [u8; CLIENT_DATA_JSON_MAX_LEN],
    signature: [u8; 64],
    challenge: [u8; 43],
    pub_key_x: [u8; 32], 
    pub_key_y: [u8; 32]
) {
    let client_data_json_hash = prefix_sha256_hash(client_data_json_len, client_data_json);
    let concat = concatenate_arrays(authenticator_data, client_data_json_hash);
    let hashed_data = std::hash::sha256(concat);

    for i in 0..(challenge.len()) {
        assert(challenge[i] == client_data_json[36 + i]);
    }

    let valid_signature = std::ecdsa_secp256r1::verify_signature(pub_key_x, pub_key_y, signature, hashed_data);
    assert(valid_signature);
}

fn concatenate_arrays(a: [u8; 37], b: [u8; 32]) -> [u8; 69] {
    let mut result = [0; 69];
    for i in 0..37 {
        result[i] = a[i];
    }
    for i in 0..32 {
        result[i+37] = b[i];
    }
    result
}

#[test]
fn test_safari_len_114() {
    let pub_key_x = [232,155,149,83,161,121,57,152,190,94,194,196,50,138,34,150,50,132,156,142,157,46,110,191,24,252,215,219,14,167,123,177];
    let pub_key_y = [209,135,117,243,19,54,46,174,93,114,37,231,234,2,194,226,112,129,87,208,143,214,86,114,202,29,239,172,51,187,44,249];

    let challenge = [65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69];
    let authenticator_data = [73,150,13,229,136,14,140,104,116,52,23,15,100,118,96,91,143,228,174,185,162,134,50,199,153,92,243,186,131,29,151,99,29,0,0,0,0];
    // {"type":"webauthn.get","challenge":"AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQE","origin":"http://localhost:5173"}
    let client_data_json = [123,34,116,121,112,101,34,58,34,119,101,98,97,117,116,104,110,46,103,101,116,34,44,34,99,104,97,108,108,101,110,103,101,34,58,34,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,
        81,69,66,65,81,69,66,65,81,69,66,65,81,69,34,44,34,111,114,105,103,105,110,34,58,34,104,116,116,112,58,47,47,108,111,99,97,108,104,111,115,116,58,53,49,55,51,34,125,
        0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 
        0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0
    ];
    let signature = [142,114,209,59,85,51,124,10,189,151,231,169,97,1,220,91,24,25,29,33,111,40,252,40,14,196,205,100,125,196,120,62,60,196,100,41,212,143,57,228,175,199,23,146,199,243,216,2,182,243,59,8,114,235,53,15,13,88,26,204,49,179,199,149];
    validate_webauthn_signature(authenticator_data, 114, client_data_json, signature, challenge, pub_key_x, pub_key_y);
}

#[test]
fn test_chrome_clientDataJSON_len_134() {
    let pub_key_x = [24,181,205,132,188,222,167,57,147,108,111,250,62,245,50,210,105,145,89,216,239,229,45,106,67,251,217,217,146,37,193,127];
    let pub_key_y = [47,34,210,182,5,51,120,121,143,11,174,114,235,12,13,242,128,168,68,233,56,20,116,216,20,72,211,11,94,38,197,25];

    let challenge = [65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69];
    let authenticator_data = [73,150,13,229,136,14,140,104,116,52,23,15,100,118,96,91,143,228,174,185,162,134,50,199,153,92,243,186,131,29,151,99,5,0,0,0,0];
    // {"type":"webauthn.get","challenge":"AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQE","origin":"http://localhost:5173","crossOrigin":false}
    let client_data_json = [123,34,116,121,112,101,34,58,34,119,101,98,97,117,116,104,110,46,103,101,116,34,44,34,99,104,97,108,108,101,110,103,101,34,58,34,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,
        81,69,66,65,81,69,66,65,81,69,66,65,81,69,34,44,34,111,114,105,103,105,110,34,58,34,104,116,116,112,58,47,47,108,111,99,97,108,104,111,115,116,58,53,49,55,51,34,44,34,99,114,111,115,115,79,114,105,103,105,110,34,58,102,97,108,115,101,125,
        0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0
        ];
    let signature = [28,230,224,46,41,42,141,231,248,7,247,21,82,94,44,217,93,77,248,54,128,36,40,88,196,12,178,176,42,234,86,195,56,209,248,103,90,44,146,7,232,1,87,180,139,224,93,183,177,224,36,179,150,83,177,224,18,81,127,10,185,237,17,203];
    validate_webauthn_signature(authenticator_data, 134, client_data_json, signature, challenge, pub_key_x, pub_key_y);
}

#[test]
fn test_chrome_clientDataJSON_len_243() {
    let pub_key_x = [24,181,205,132,188,222,167,57,147,108,111,250,62,245,50,210,105,145,89,216,239,229,45,106,67,251,217,217,146,37,193,127];
    let pub_key_y = [47,34,210,182,5,51,120,121,143,11,174,114,235,12,13,242,128,168,68,233,56,20,116,216,20,72,211,11,94,38,197,25];

    let challenge = [65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69];
    let authenticator_data = [73,150,13,229,136,14,140,104,116,52,23,15,100,118,96,91,143,228,174,185,162,134,50,199,153,92,243,186,131,29,151,99,5,0,0,0,0];
    // {"type":"webauthn.get","challenge":"AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQE","origin":"http://localhost:5173","crossOrigin":false,"other_keys_can_be_added_here":"do not compare clientDataJSON against a template. See https://goo.gl/yabPex"}
    let client_data_json = [123,34,116,121,112,101,34,58,34,119,101,98,97,117,116,104,110,46,103,101,116,34,44,34,99,104,97,108,108,101,110,103,101,34,58,34,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,69,66,65,81,
        69,66,65,81,69,66,65,81,69,66,65,81,69,34,44,34,111,114,105,103,105,110,34,58,34,104,116,116,112,58,47,47,108,111,99,97,108,104,111,115,116,58,53,49,55,51,34,44,34,99,114,111,115,115,79,114,105,103,105,110,34,58,102,97,108,115,101,44,34,
        111,116,104,101,114,95,107,101,121,115,95,99,97,110,95,98,101,95,97,100,100,101,100,95,104,101,114,101,34,58,34,100,111,32,110,111,116,32,99,111,109,112,97,114,101,32,99,108,105,101,110,116,68,97,116,97,74,83,79,78,32,97,103,97,105,110,
        115,116,32,97,32,116,101,109,112,108,97,116,101,46,32,83,101,101,32,104,116,116,112,115,58,47,47,103,111,111,46,103,108,47,121,97,98,80,101,120,34,125,0,0,0,0,0,0,0,0,0,0,0,0];
    let signature = [158,222,80,217,211,123,180,66,252,52,202,35,237,105,242,104,192,71,221,62,135,27,236,194,133,73,73,240,164,244,240,100,78,28,119,45,57,122,83,123,116,114,199,203,57,61,8,95,250,34,128,101,237,32,54,213,29,245,26,84,1,71,225,226];
    validate_webauthn_signature(authenticator_data, 243, client_data_json, signature, challenge, pub_key_x, pub_key_y);
}
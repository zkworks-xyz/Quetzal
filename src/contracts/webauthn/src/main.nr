use dep::std;

fn main(x : Field, y : pub Field) {
    assert(x != y);
}

#[test]
fn test_webauthn() {
    let pub_key_x = [144,236,197,210,213,239,214,50,180,202,46,135,69,134,92,102,41,200,205,8,251,77,26,48,161,132,11,239,233,205,130,109];
    let pub_key_y = [246,155,67,247,140,129,22,56,68,122,107,40,190,116,85,141,120,153,219,72,127,102,101,63,38,159,252,174,180,8,118,203];

    let data = [73,150,13,229,136,14,140,104,116,52,23,15,100,118,96,91,143,228,174,185,162,134,50,199,153,92,243,186,131,29,151,99,5,0,0,0,0,250,85,139,210,131,119,175,242,25,79,188,88,125,156,166,130,146,246,189,130,240,211,133,58,207,121,213,230,227,26,199,8];
    let signature = [165,141,13,101,59,157,249,95,220,120,154,217,84,236,206,56,104,162,62,96,76,132,109,9,181,42,8,138,41,136,43,0,121,119,53,194,89,71,67,65,45,175,21,154,170,139,144,252,105,193,13,47,66,190,114,136,249,135,120,178,72,238,12,179];

    let hashed_data = std::hash::sha256(data);

    let valid_signature = std::ecdsa_secp256r1::verify_signature(pub_key_x, pub_key_y, signature, hashed_data);
    assert(valid_signature);
}